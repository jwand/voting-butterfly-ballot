
R : Copyright 2000, The R Development Core Team
Version 1.2.0  (2000-12-15)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type `license()' or `licence()' for distribution details.

R is a collaborative project with many contributors.
Type `contributors()' for more information.

Type `demo()' for some demos, `help()' for on-line help, or
`help.start()' for a HTML browser interface to help.
Type `q()' to quit R.

[Previously saved workspace restored]

> invisible(options(echo = TRUE))
> options(warn=1)
> source("../rgenoud.R");
> source("../function.lqd8.R",echo=T,max.deparse.length = 1000)

> lqd <- function(mydata, nparms = 3, str.pop, str.dep, 
    str.indep, sample.name, pop.size, wait.generations, max.generations = 20, 
    gradient.check, project, outlier.threshold = 2.5, flag.print = T, 
    ps.dir = "postscript", ps.flag = T, pstart = NULL, mdomains = NULL) {
    obs <- dim(mydata)[1]
    h <- ceiling((obs + nparms)/2)
    diflen <- (obs * (obs - 1))/2
    hidx <- (h * (h - 1))/2
    data.pop <- eval(parse(text = paste("mydata$", str.pop, sep = "")))
    data.dep <- eval(parse(text = paste("mydata$", str.dep, sep = "")))
    data.indep <- matrix(NA, obs, length(str.indep) + 1)
    data.indep[, 1] <- 1
    for (i in 1:length(str.indep)) {
        statement <- paste("mydata$", str.indep[i], sep = "")
        print(statement)
        tmp <- eval(parse(text = statement))
        data.indep[, i + 1] <- tmp
    }
    fit.lqd1 <- function(foo) {
        mu <- c(data.indep %*% foo)
        y <- 1/(1 + exp(-1 * mu))
        rawres <- (data.pop * (data.dep - y))/(sqrt(data.pop .... [TRUNCATED] 
> library("KernSmooth");
KernSmooth 2.22 installed
Copyright M. P. Wand 1997
> 
> source("../data.pbc.R",echo=T,max.deparse.length = 1000) ## MySQL retrieves data

> pbc.pres <- read.table(file = "../2000pres.parsed.txt", 
    header = T, as.is = T)

> pbc.pres <- pbc.pres[, -1]

> ptotal <- pbc.pres$bushm + pbc.pres$gorem + pbc.pres$brownem + 
    pbc.pres$naderm + pbc.pres$harrism + pbc.pres$hagelinm + 
    pbc.pres$buchananm + pbc.pres$mcreynoldsm + pbc.pres$phillipsm + 
    pbc.pres$mooreheadm

> pbuch <- pbc.pres$buchananm/ptotal

> pbc.pres.total <- pbc.pres$bushm + pbc.pres$gorem + 
    pbc.pres$brownem + pbc.pres$naderm + pbc.pres$harrism + pbc.pres$hagelinm + 
    pbc.pres$buchananm + pbc.pres$mcreynoldsm + pbc.pres$phillipsm + 
    pbc.pres$mooreheadm

> pbc.pres[, -1] <- pbc.pres[, -1]/pbc.pres.total

> useme.ss35 <- rep(0, times = length(pbc.pres.total))

> useme.us16 <- rep(0, times = length(pbc.pres.total))

> pbc.senate <- read.table(file = "../2000senate.parsed.txt", 
    header = T, as.is = T)

> stotal <- pbc.senate$mccollum + pbc.senate$nelson + 
    pbc.senate$simonetta + pbc.senate$deckard + pbc.senate$logan + 
    pbc.senate$martin + pbc.senate$mccormick + pbc.senate$writein

> pdeckard <- pbc.senate$deckard/stotal

> pnelson <- pbc.senate$nelson/stotal

> pbc.senate.total <- pbc.senate$mccollum + pbc.senate$nelson + 
    pbc.senate$simonetta + pbc.senate$deckard + pbc.senate$logan + 
    pbc.senate$martin + pbc.senate$mccormick + pbc.senate$writein

> pbc.senate[, -1] <- pbc.senate[, -1]/pbc.senate.total

> pbc.ss35 <- read.table(file = "../pbc.statesenate35.all.txt", 
    header = T, as.is = T)

> useme.ss35[as.logical(pbc.ss35$vaughan > -99)] <- 1

> sstotal <- pbc.ss35$vaughan + pbc.ss35$rossin + pbc.ss35$lowe

> plowe <- pbc.ss35$lowe/sstotal

> pbc.ss35.total <- pbc.ss35$vaughan + pbc.ss35$rossin + 
    pbc.ss35$lowe

> pbc.ss35[, -1] <- pbc.ss35[, -1]/pbc.ss35.total

> pbc.us16 <- read.table(file = "../pbc.ushouse16.all.txt", 
    header = T, as.is = T)

> useme.us16[as.logical(pbc.us16$foley > -99)] <- 1

> shtotal <- pbc.us16$foley + pbc.us16$brown + pbc.us16$mcguire + 
    pbc.us16$writein

> pmcguire <- pbc.us16$mcguire/shtotal

> pbc.us16.total <- pbc.us16$foley + pbc.us16$brown + 
    pbc.us16$mcguire + pbc.us16$writein

> pbc.us16[, -1] <- pbc.us16[, -1]/pbc.us16.total

> useme.ss35[532:637] <- 0

> useme.us16[532:637] <- 0

> useme.ss35[is.na(plowe)] <- 0

> useme.us16[is.na(pmcguire)] <- 0

> print(cbind(pbc.pres$precinct[useme.ss35 == 1], round(cbind(plowe, 
    pbc.ss35$lowe, plowe - pbc.ss35$lowe, sstotal, ptotal, pbc.ss35.total, 
    pbc.pres.total, useme.ss35)[useme.ss35 == 1, ], 4)))
              plowe                 sstotal ptotal pbc.ss35.total
  [1,] "13"   "0.048"  "0.048"  "0" "1147"  "1187" "1147"        
  [2,] "13A"  "0.0441" "0.0441" "0" "204"   "203"  "204"         
  [3,] "18A"  "0.0566" "0.0566" "0" "1220"  "1188" "1220"        
  [4,] "18C"  "0.0398" "0.0398" "0" "1332"  "1357" "1332"        
  [5,] "18D"  "0.0362" "0.0362" "0" "1632"  "1654" "1632"        
  [6,] "18F"  "0.044"  "0.044"  "0" "318"   "316"  "318"         
  [7,] "18G"  "0"      "0"      "0" "41"    "44"   "41"          
  [8,] "18H"  "0.0263" "0.0263" "0" "38"    "39"   "38"          
  [9,] "18J"  "0.0338" "0.0338" "0" "1300"  "1334" "1300"        
 [10,] "19"   "0.0285" "0.0285" "0" "1614"  "1594" "1614"        
 [11,] "19A"  "0.0303" "0.0303" "0" "1253"  "1286" "1253"        
 [12,] "20"   "0.0249" "0.0249" "0" "522"   "497"  "522"         
 [13,] "21"   "0.0241" "0.0241" "0" "498"   "477"  "498"         
 [14,] "21A"  "0.0448" "0.0448" "0" "67"    "66"   "67"          
 [15,] "22"   "0.0171" "0.0171" "0" "819"   "776"  "819"         
 [16,] "23"   "0.0286" "0.0286" "0" "594"   "578"  "594"         
 [17,] "24"   "0.0179" "0.0179" "0" "1342"  "1325" "1342"        
 [18,] "26C"  "0.0461" "0.0461" "0" "542"   "561"  "542"         
 [19,] "27"   "0.0455" "0.0455" "0" "968"   "949"  "968"         
 [20,] "29"   "0.0179" "0.0179" "0" "1288"  "1296" "1288"        
 [21,] "29A"  "0.0556" "0.0556" "0" "917"   "946"  "917"         
 [22,] "29B"  "0.0307" "0.0307" "0" "783"   "783"  "783"         
 [23,] "29D"  "0.0572" "0.0572" "0" "822"   "858"  "822"         
 [24,] "29F"  "0.0909" "0.0909" "0" "55"    "53"   "55"          
 [25,] "30"   "0.0333" "0.0333" "0" "840"   "844"  "840"         
 [26,] "30A"  "0.0214" "0.0214" "0" "934"   "922"  "934"         
 [27,] "30B"  "0.0434" "0.0434" "0" "1314"  "1334" "1314"        
 [28,] "31H"  "0"      "0"      "0" "2"     "2"    "2"           
 [29,] "32"   "0.0606" "0.0606" "0" "1189"  "1246" "1189"        
 [30,] "32A"  "0.0692" "0.0692" "0" "1040"  "1081" "1040"        
 [31,] "36"   "0.0588" "0.0588" "0" "153"   "144"  "153"         
 [32,] "40"   "0.0125" "0.0125" "0" "481"   "460"  "481"         
 [33,] "41A"  "0.051"  "0.051"  "0" "726"   "739"  "726"         
 [34,] "41B"  "0.0591" "0.0591" "0" "1506"  "1583" "1506"        
 [35,] "41C"  "0.0528" "0.0528" "0" "872"   "907"  "872"         
 [36,] "41D"  "0.0644" "0.0644" "0" "1103"  "1162" "1103"        
 [37,] "44"   "0.0433" "0.0433" "0" "254"   "248"  "254"         
 [38,] "44B"  "0.0277" "0.0277" "0" "253"   "231"  "253"         
 [39,] "44C"  "0.0563" "0.0563" "0" "71"    "67"   "71"          
 [40,] "51"   "0.0273" "0.0273" "0" "768"   "731"  "768"         
 [41,] "54"   "0.0238" "0.0238" "0" "294"   "286"  "294"         
 [42,] "55"   "0.0132" "0.0132" "0" "303"   "281"  "303"         
 [43,] "60"   "0.0235" "0.0235" "0" "639"   "619"  "639"         
 [44,] "61"   "0.0287" "0.0287" "0" "1254"  "1250" "1254"        
 [45,] "61A"  "0.0096" "0.0096" "0" "418"   "415"  "418"         
 [46,] "61B"  "0.0471" "0.0471" "0" "573"   "590"  "573"         
 [47,] "61C"  "0.125"  "0.125"  "0" "16"    "16"   "16"          
 [48,] "65"   "0.0357" "0.0357" "0" "28"    "47"   "28"          
 [49,] "73A"  "0.0504" "0.0504" "0" "456"   "478"  "456"         
 [50,] "73B"  "0.0141" "0.0141" "0" "495"   "529"  "495"         
 [51,] "73C"  "0.0455" "0.0455" "0" "88"    "96"   "88"          
 [52,] "73D"  "0.0341" "0.0341" "0" "176"   "183"  "176"         
 [53,] "73E"  "0.0573" "0.0573" "0" "436"   "463"  "436"         
 [54,] "73H"  "0.0429" "0.0429" "0" "1562"  "1630" "1562"        
 [55,] "73I"  "0"      "0"      "0" "18"    "17"   "18"          
 [56,] "74B"  "0.0476" "0.0476" "0" "798"   "869"  "798"         
 [57,] "74C"  "0.0761" "0.0761" "0" "631"   "637"  "631"         
 [58,] "74D"  "0.0654" "0.0654" "0" "107"   "93"   "107"         
 [59,] "74G"  "0.0606" "0.0606" "0" "924"   "996"  "924"         
 [60,] "76"   "0.0679" "0.0679" "0" "324"   "337"  "324"         
 [61,] "76A"  "0.0495" "0.0495" "0" "586"   "596"  "586"         
 [62,] "78"   "0.0571" "0.0571" "0" "490"   "510"  "490"         
 [63,] "79"   "0.0534" "0.0534" "0" "693"   "677"  "693"         
 [64,] "83"   "0.0663" "0.0663" "0" "166"   "172"  "166"         
 [65,] "86A"  "0.0357" "0.0357" "0" "112"   "113"  "112"         
 [66,] "87"   "0"      "0"      "0" "9"     "9"    "9"           
 [67,] "87A"  "0.0295" "0.0295" "0" "271"   "275"  "271"         
 [68,] "87B"  "0.0698" "0.0698" "0" "43"    "48"   "43"          
 [69,] "91"   "0.0544" "0.0544" "0" "698"   "710"  "698"         
 [70,] "92"   "0.0444" "0.0444" "0" "631"   "645"  "631"         
 [71,] "92A"  "0"      "0"      "0" "2"     "2"    "2"           
 [72,] "93"   "0.0644" "0.0644" "0" "1181"  "1241" "1181"        
 [73,] "93A"  "0.0527" "0.0527" "0" "740"   "780"  "740"         
 [74,] "93B"  "0.0705" "0.0705" "0" "1347"  "1424" "1347"        
 [75,] "94"   "0.057"  "0.057"  "0" "1386"  "1388" "1386"        
 [76,] "95"   "0.0738" "0.0738" "0" "691"   "695"  "691"         
 [77,] "95A"  "0.0752" "0.0752" "0" "359"   "361"  "359"         
 [78,] "96"   "0.0466" "0.0466" "0" "408"   "445"  "408"         
 [79,] "96A"  "0.0444" "0.0444" "0" "270"   "281"  "270"         
 [80,] "97"   "0.0388" "0.0388" "0" "851"   "871"  "851"         
 [81,] "97A"  "0.0199" "0.0199" "0" "151"   "163"  "151"         
 [82,] "101"  "0.0405" "0.0405" "0" "692"   "711"  "692"         
 [83,] "101A" "0.0833" "0.0833" "0" "144"   "149"  "144"         
 [84,] "104A" "0.0484" "0.0484" "0" "62"    "66"   "62"          
 [85,] "104C" "0.12"   "0.12"   "0" "50"    "40"   "50"          
 [86,] "107"  "0.0306" "0.0306" "0" "752"   "784"  "752"         
 [87,] "108"  "0.0594" "0.0594" "0" "707"   "732"  "707"         
 [88,] "108A" "0.0474" "0.0474" "0" "274"   "269"  "274"         
 [89,] "108B" "0.0345" "0.0345" "0" "58"    "61"   "58"          
 [90,] "114"  "0.0288" "0.0288" "0" "139"   "135"  "139"         
 [91,] "114D" "0"      "0"      "0" "7"     "7"    "7"           
 [92,] "128K" "0.1333" "0.1333" "0" "15"    "14"   "15"          
 [93,] "135B" "0.021"  "0.021"  "0" "1048"  "1053" "1048"        
 [94,] "137"  "0.0413" "0.0413" "0" "944"   "894"  "944"         
 [95,] "143"  "0.0833" "0.0833" "0" "24"    "24"   "24"          
 [96,] "144"  "0.0323" "0.0323" "0" "1083"  "1111" "1083"        
 [97,] "144A" "0.0522" "0.0522" "0" "881"   "890"  "881"         
 [98,] "144B" "0.0485" "0.0485" "0" "1133"  "1158" "1133"        
 [99,] "144C" "0.0457" "0.0457" "0" "1555"  "1449" "1555"        
[100,] "144D" "0.0499" "0.0499" "0" "1603"  "1580" "1603"        
[101,] "144E" "0.05"   "0.05"   "0" "1199"  "1170" "1199"        
[102,] "144F" "0.1111" "0.1111" "0" "9"     "9"    "9"           
[103,] "159"  "0.0526" "0.0526" "0" "1236"  "1311" "1236"        
[104,] "159J" "0.0506" "0.0506" "0" "770"   "811"  "770"         
[105,] "159K" "0.0431" "0.0431" "0" "975"   "1025" "975"         
       pbc.pres.total useme.ss35
  [1,] "1187"         "1"       
  [2,] "203"          "1"       
  [3,] "1188"         "1"       
  [4,] "1357"         "1"       
  [5,] "1654"         "1"       
  [6,] "316"          "1"       
  [7,] "44"           "1"       
  [8,] "39"           "1"       
  [9,] "1334"         "1"       
 [10,] "1594"         "1"       
 [11,] "1286"         "1"       
 [12,] "497"          "1"       
 [13,] "477"          "1"       
 [14,] "66"           "1"       
 [15,] "776"          "1"       
 [16,] "578"          "1"       
 [17,] "1325"         "1"       
 [18,] "561"          "1"       
 [19,] "949"          "1"       
 [20,] "1296"         "1"       
 [21,] "946"          "1"       
 [22,] "783"          "1"       
 [23,] "858"          "1"       
 [24,] "53"           "1"       
 [25,] "844"          "1"       
 [26,] "922"          "1"       
 [27,] "1334"         "1"       
 [28,] "2"            "1"       
 [29,] "1246"         "1"       
 [30,] "1081"         "1"       
 [31,] "144"          "1"       
 [32,] "460"          "1"       
 [33,] "739"          "1"       
 [34,] "1583"         "1"       
 [35,] "907"          "1"       
 [36,] "1162"         "1"       
 [37,] "248"          "1"       
 [38,] "231"          "1"       
 [39,] "67"           "1"       
 [40,] "731"          "1"       
 [41,] "286"          "1"       
 [42,] "281"          "1"       
 [43,] "619"          "1"       
 [44,] "1250"         "1"       
 [45,] "415"          "1"       
 [46,] "590"          "1"       
 [47,] "16"           "1"       
 [48,] "47"           "1"       
 [49,] "478"          "1"       
 [50,] "529"          "1"       
 [51,] "96"           "1"       
 [52,] "183"          "1"       
 [53,] "463"          "1"       
 [54,] "1630"         "1"       
 [55,] "17"           "1"       
 [56,] "869"          "1"       
 [57,] "637"          "1"       
 [58,] "93"           "1"       
 [59,] "996"          "1"       
 [60,] "337"          "1"       
 [61,] "596"          "1"       
 [62,] "510"          "1"       
 [63,] "677"          "1"       
 [64,] "172"          "1"       
 [65,] "113"          "1"       
 [66,] "9"            "1"       
 [67,] "275"          "1"       
 [68,] "48"           "1"       
 [69,] "710"          "1"       
 [70,] "645"          "1"       
 [71,] "2"            "1"       
 [72,] "1241"         "1"       
 [73,] "780"          "1"       
 [74,] "1424"         "1"       
 [75,] "1388"         "1"       
 [76,] "695"          "1"       
 [77,] "361"          "1"       
 [78,] "445"          "1"       
 [79,] "281"          "1"       
 [80,] "871"          "1"       
 [81,] "163"          "1"       
 [82,] "711"          "1"       
 [83,] "149"          "1"       
 [84,] "66"           "1"       
 [85,] "40"           "1"       
 [86,] "784"          "1"       
 [87,] "732"          "1"       
 [88,] "269"          "1"       
 [89,] "61"           "1"       
 [90,] "135"          "1"       
 [91,] "7"            "1"       
 [92,] "14"           "1"       
 [93,] "1053"         "1"       
 [94,] "894"          "1"       
 [95,] "24"           "1"       
 [96,] "1111"         "1"       
 [97,] "890"          "1"       
 [98,] "1158"         "1"       
 [99,] "1449"         "1"       
[100,] "1580"         "1"       
[101,] "1170"         "1"       
[102,] "9"            "1"       
[103,] "1311"         "1"       
[104,] "811"          "1"       
[105,] "1025"         "1"       

> print(cbind(pbc.pres$precinct[useme.us16 == 1], round(cbind(pmcguire, 
    pbc.us16$mcguire, pmcguire - pbc.us16$mcguire, shtotal, ptotal, 
    pbc.us16.total, pbc.pres.total, useme.us16)[useme.us16 == 
    1, ], 4)))
              pmcguire              shtotal ptotal pbc.us16.total
  [1,] "1"    "0.021"  "0.021"  "0" "1046"  "1057" "1046"        
  [2,] "1A"   "0.0147" "0.0147" "0" "887"   "965"  "887"         
  [3,] "1B"   "0.015"  "0.015"  "0" "1001"  "1036" "1001"        
  [4,] "1C"   "0.0219" "0.0219" "0" "957"   "1027" "957"         
  [5,] "2"    "0.0145" "0.0145" "0" "1444"  "1511" "1444"        
  [6,] "3"    "0.029"  "0.029"  "0" "1378"  "1420" "1378"        
  [7,] "3A"   "0.027"  "0.027"  "0" "519"   "534"  "519"         
  [8,] "3B"   "0.0108" "0.0108" "0" "556"   "581"  "556"         
  [9,] "3C"   "0.0146" "0.0146" "0" "1162"  "1203" "1162"        
 [10,] "4"    "0.0256" "0.0256" "0" "780"   "813"  "780"         
 [11,] "4A"   "0.0271" "0.0271" "0" "776"   "826"  "776"         
 [12,] "4B"   "0.0125" "0.0125" "0" "1043"  "1115" "1043"        
 [13,] "4C"   "0.0038" "0.0038" "0" "529"   "567"  "529"         
 [14,] "4D"   "0.0194" "0.0194" "0" "1136"  "1174" "1136"        
 [15,] "4E"   "0.0111" "0.0111" "0" "629"   "651"  "629"         
 [16,] "5"    "0.0242" "0.0242" "0" "537"   "562"  "537"         
 [17,] "5A"   "0.0277" "0.0277" "0" "1155"  "1211" "1155"        
 [18,] "5B"   "0.0226" "0.0226" "0" "1552"  "1644" "1552"        
 [19,] "5C"   "0.0166" "0.0166" "0" "602"   "619"  "602"         
 [20,] "5D"   "0.0315" "0.0315" "0" "984"   "1010" "984"         
 [21,] "5E"   "0.013"  "0.013"  "0" "460"   "483"  "460"         
 [22,] "6"    "0.0273" "0.0273" "0" "1247"  "1334" "1247"        
 [23,] "12"   "0.0323" "0.0323" "0" "526"   "556"  "526"         
 [24,] "12A"  "0.037"  "0.037"  "0" "1244"  "1306" "1244"        
 [25,] "12B"  "0.0222" "0.0222" "0" "361"   "383"  "361"         
 [26,] "12C"  "0.0303" "0.0303" "0" "1454"  "1516" "1454"        
 [27,] "12D"  "0.0403" "0.0403" "0" "1043"  "1097" "1043"        
 [28,] "13"   "0.0203" "0.0203" "0" "1134"  "1187" "1134"        
 [29,] "13A"  "0.0053" "0.0053" "0" "190"   "203"  "190"         
 [30,] "13B"  "0.0385" "0.0385" "0" "130"   "134"  "130"         
 [31,] "13C"  "0.0332" "0.0332" "0" "301"   "296"  "301"         
 [32,] "13D"  "0.0208" "0.0208" "0" "48"    "50"   "48"          
 [33,] "14"   "0.0099" "0.0099" "0" "911"   "950"  "911"         
 [34,] "16"   "0.0251" "0.0251" "0" "1395"  "1445" "1395"        
 [35,] "16A"  "0.0103" "0.0103" "0" "873"   "949"  "873"         
 [36,] "17"   "0.0321" "0.0321" "0" "467"   "485"  "467"         
 [37,] "17B"  "0.0357" "0.0357" "0" "168"   "183"  "168"         
 [38,] "18A"  "0.0259" "0.0259" "0" "1160"  "1188" "1160"        
 [39,] "18B"  "0.0268" "0.0268" "0" "1120"  "1159" "1120"        
 [40,] "18C"  "0.0171" "0.0171" "0" "1285"  "1357" "1285"        
 [41,] "18D"  "0.0176" "0.0176" "0" "1591"  "1654" "1591"        
 [42,] "18F"  "0.01"   "0.01"   "0" "299"   "316"  "299"         
 [43,] "18J"  "0.0145" "0.0145" "0" "1240"  "1334" "1240"        
 [44,] "19"   "0.0105" "0.0105" "0" "1530"  "1594" "1530"        
 [45,] "19A"  "0.0179" "0.0179" "0" "1231"  "1286" "1231"        
 [46,] "20"   "0.023"  "0.023"  "0" "478"   "497"  "478"         
 [47,] "21"   "0.0108" "0.0108" "0" "463"   "477"  "463"         
 [48,] "21A"  "0"      "0"      "0" "66"    "66"   "66"          
 [49,] "22"   "0.0078" "0.0078" "0" "770"   "776"  "770"         
 [50,] "23"   "0.0261" "0.0261" "0" "537"   "578"  "537"         
 [51,] "24"   "0.011"  "0.011"  "0" "1271"  "1325" "1271"        
 [52,] "25"   "0.0264" "0.0264" "0" "455"   "475"  "455"         
 [53,] "26B"  "0.04"   "0.04"   "0" "525"   "547"  "525"         
 [54,] "26C"  "0.0242" "0.0242" "0" "537"   "561"  "537"         
 [55,] "27"   "0.0167" "0.0167" "0" "899"   "949"  "899"         
 [56,] "29"   "0.0097" "0.0097" "0" "1235"  "1296" "1235"        
 [57,] "29A"  "0.0285" "0.0285" "0" "911"   "946"  "911"         
 [58,] "29B"  "0.0055" "0.0055" "0" "728"   "783"  "728"         
 [59,] "29C"  "0.0245" "0.0245" "0" "653"   "702"  "653"         
 [60,] "29D"  "0.0181" "0.0181" "0" "829"   "858"  "829"         
 [61,] "29F"  "0.0556" "0.0556" "0" "54"    "53"   "54"          
 [62,] "30"   "0.0194" "0.0194" "0" "826"   "844"  "826"         
 [63,] "30A"  "0.009"  "0.009"  "0" "893"   "922"  "893"         
 [64,] "30B"  "0.0171" "0.0171" "0" "1289"  "1334" "1289"        
 [65,] "31A"  "0.017"  "0.017"  "0" "1116"  "1163" "1116"        
 [66,] "31C"  "0.0269" "0.0269" "0" "558"   "598"  "558"         
 [67,] "31H"  "0"      "0"      "0" "1"     "2"    "1"           
 [68,] "32"   "0.0201" "0.0201" "0" "1196"  "1246" "1196"        
 [69,] "32A"  "0.0417" "0.0417" "0" "1054"  "1081" "1054"        
 [70,] "37"   "0.0134" "0.0134" "0" "522"   "573"  "522"         
 [71,] "38A"  "0"      "0"      "0" "2"     "2"    "2"           
 [72,] "40"   "0.0183" "0.0183" "0" "438"   "460"  "438"         
 [73,] "41"   "0.0279" "0.0279" "0" "1467"  "1526" "1467"        
 [74,] "41A"  "0.027"  "0.027"  "0" "703"   "739"  "703"         
 [75,] "41B"  "0.0324" "0.0324" "0" "1514"  "1583" "1514"        
 [76,] "41C"  "0.0231" "0.0231" "0" "867"   "907"  "867"         
 [77,] "41D"  "0.0405" "0.0405" "0" "1110"  "1162" "1110"        
 [78,] "42"   "0.0229" "0.0229" "0" "1177"  "1220" "1177"        
 [79,] "42A"  "0.0172" "0.0172" "0" "697"   "743"  "697"         
 [80,] "43"   "0"      "0"      "0" "73"    "75"   "73"          
 [81,] "44C"  "0.0128" "0.0128" "0" "78"    "67"   "78"          
 [82,] "46A"  "0.0338" "0.0338" "0" "296"   "312"  "296"         
 [83,] "47"   "0.0372" "0.0372" "0" "1021"  "1063" "1021"        
 [84,] "47A"  "0.0213" "0.0213" "0" "1364"  "1429" "1364"        
 [85,] "47B"  "0.0136" "0.0136" "0" "884"   "926"  "884"         
 [86,] "47C"  "0.011"  "0.011"  "0" "1278"  "1368" "1278"        
 [87,] "47D"  "0.0137" "0.0137" "0" "1024"  "1102" "1024"        
 [88,] "60"   "0.0068" "0.0068" "0" "585"   "619"  "585"         
 [89,] "61"   "0.0114" "0.0114" "0" "1141"  "1250" "1141"        
 [90,] "61A"  "0.0025" "0.0025" "0" "397"   "415"  "397"         
 [91,] "61B"  "0.0212" "0.0212" "0" "566"   "590"  "566"         
 [92,] "65A"  "0.0169" "0.0169" "0" "649"   "711"  "649"         
 [93,] "65B"  "0.0162" "0.0162" "0" "371"   "391"  "371"         
 [94,] "65C"  "0.1053" "0.1053" "0" "19"    "18"   "19"          
 [95,] "73B"  "0.0061" "0.0061" "0" "489"   "529"  "489"         
 [96,] "73D"  "0.0171" "0.0171" "0" "175"   "183"  "175"         
 [97,] "73F"  "0"      "0"      "0" "123"   "129"  "123"         
 [98,] "73H"  "0.017"  "0.017"  "0" "1530"  "1630" "1530"        
 [99,] "73I"  "0"      "0"      "0" "16"    "17"   "16"          
[100,] "74"   "0.0112" "0.0112" "0" "1254"  "1323" "1254"        
[101,] "74B"  "0.021"  "0.021"  "0" "808"   "869"  "808"         
[102,] "74E"  "0.0067" "0.0067" "0" "902"   "946"  "902"         
[103,] "74F"  "0.0183" "0.0183" "0" "602"   "642"  "602"         
[104,] "74G"  "0.0224" "0.0224" "0" "936"   "996"  "936"         
[105,] "78"   "0.0141" "0.0141" "0" "497"   "510"  "497"         
[106,] "79"   "0.0228" "0.0228" "0" "659"   "677"  "659"         
[107,] "91"   "0.02"   "0.02"   "0" "651"   "710"  "651"         
[108,] "93A"  "0.03"   "0.03"   "0" "733"   "780"  "733"         
[109,] "94"   "0.0271" "0.0271" "0" "1367"  "1388" "1367"        
[110,] "95"   "0.0277" "0.0277" "0" "686"   "695"  "686"         
[111,] "95A"  "0.0341" "0.0341" "0" "352"   "361"  "352"         
[112,] "97"   "0.0145" "0.0145" "0" "825"   "871"  "825"         
[113,] "104"  "0.041"  "0.041"  "0" "415"   "423"  "415"         
[114,] "104B" "0.0337" "0.0337" "0" "1393"  "1462" "1393"        
[115,] "104C" "0.0213" "0.0213" "0" "47"    "40"   "47"          
[116,] "108B" "0.0323" "0.0323" "0" "62"    "61"   "62"          
[117,] "113"  "0.029"  "0.029"  "0" "1034"  "1065" "1034"        
[118,] "114A" "0.0091" "0.0091" "0" "110"   "132"  "110"         
[119,] "114C" "0"      "0"      "0" "4"     "6"    "4"           
[120,] "114D" "0"      "0"      "0" "7"     "7"    "7"           
[121,] "115"  "0.0188" "0.0188" "0" "532"   "577"  "532"         
[122,] "117"  "0.0291" "0.0291" "0" "997"   "1046" "997"         
[123,] "117A" "0.0326" "0.0326" "0" "1198"  "1268" "1198"        
[124,] "128B" "0.0208" "0.0208" "0" "624"   "654"  "624"         
[125,] "128C" "0.0144" "0.0144" "0" "971"   "1035" "971"         
[126,] "135"  "0.0281" "0.0281" "0" "356"   "364"  "356"         
[127,] "135B" "0.0069" "0.0069" "0" "1014"  "1053" "1014"        
[128,] "135C" "0.0638" "0.0638" "0" "47"    "48"   "47"          
[129,] "137"  "0.0219" "0.0219" "0" "868"   "894"  "868"         
[130,] "143"  "0.0833" "0.0833" "0" "24"    "24"   "24"          
[131,] "144"  "0.0214" "0.0214" "0" "1075"  "1111" "1075"        
[132,] "144B" "0.036"  "0.036"  "0" "1139"  "1158" "1139"        
[133,] "144C" "0.029"  "0.029"  "0" "1518"  "1449" "1518"        
[134,] "144D" "0.0221" "0.0221" "0" "1587"  "1580" "1587"        
[135,] "144E" "0.0461" "0.0461" "0" "1194"  "1170" "1194"        
[136,] "144F" "0"      "0"      "0" "3"     "9"    "3"           
[137,] "148F" "0.0278" "0.0278" "0" "252"   "269"  "252"         
[138,] "159"  "0.0264" "0.0264" "0" "1249"  "1311" "1249"        
[139,] "159A" "0.0192" "0.0192" "0" "1251"  "1305" "1251"        
[140,] "159D" "0.0095" "0.0095" "0" "211"   "217"  "211"         
[141,] "159E" "0.0209" "0.0209" "0" "1242"  "1290" "1242"        
[142,] "159F" "0.0176" "0.0176" "0" "1080"  "1121" "1080"        
[143,] "159G" "0.0597" "0.0597" "0" "67"    "70"   "67"          
[144,] "159H" "0.2"    "0.2"    "0" "15"    "19"   "15"          
[145,] "159J" "0.0249" "0.0249" "0" "764"   "811"  "764"         
[146,] "159K" "0.0237" "0.0237" "0" "970"   "1025" "970"         
[147,] "159L" "0.0245" "0.0245" "0" "899"   "942"  "899"         
[148,] "159P" "0.0094" "0.0094" "0" "636"   "675"  "636"         
[149,] "159Q" "0.0171" "0.0171" "0" "817"   "850"  "817"         
       pbc.pres.total useme.us16
  [1,] "1057"         "1"       
  [2,] "965"          "1"       
  [3,] "1036"         "1"       
  [4,] "1027"         "1"       
  [5,] "1511"         "1"       
  [6,] "1420"         "1"       
  [7,] "534"          "1"       
  [8,] "581"          "1"       
  [9,] "1203"         "1"       
 [10,] "813"          "1"       
 [11,] "826"          "1"       
 [12,] "1115"         "1"       
 [13,] "567"          "1"       
 [14,] "1174"         "1"       
 [15,] "651"          "1"       
 [16,] "562"          "1"       
 [17,] "1211"         "1"       
 [18,] "1644"         "1"       
 [19,] "619"          "1"       
 [20,] "1010"         "1"       
 [21,] "483"          "1"       
 [22,] "1334"         "1"       
 [23,] "556"          "1"       
 [24,] "1306"         "1"       
 [25,] "383"          "1"       
 [26,] "1516"         "1"       
 [27,] "1097"         "1"       
 [28,] "1187"         "1"       
 [29,] "203"          "1"       
 [30,] "134"          "1"       
 [31,] "296"          "1"       
 [32,] "50"           "1"       
 [33,] "950"          "1"       
 [34,] "1445"         "1"       
 [35,] "949"          "1"       
 [36,] "485"          "1"       
 [37,] "183"          "1"       
 [38,] "1188"         "1"       
 [39,] "1159"         "1"       
 [40,] "1357"         "1"       
 [41,] "1654"         "1"       
 [42,] "316"          "1"       
 [43,] "1334"         "1"       
 [44,] "1594"         "1"       
 [45,] "1286"         "1"       
 [46,] "497"          "1"       
 [47,] "477"          "1"       
 [48,] "66"           "1"       
 [49,] "776"          "1"       
 [50,] "578"          "1"       
 [51,] "1325"         "1"       
 [52,] "475"          "1"       
 [53,] "547"          "1"       
 [54,] "561"          "1"       
 [55,] "949"          "1"       
 [56,] "1296"         "1"       
 [57,] "946"          "1"       
 [58,] "783"          "1"       
 [59,] "702"          "1"       
 [60,] "858"          "1"       
 [61,] "53"           "1"       
 [62,] "844"          "1"       
 [63,] "922"          "1"       
 [64,] "1334"         "1"       
 [65,] "1163"         "1"       
 [66,] "598"          "1"       
 [67,] "2"            "1"       
 [68,] "1246"         "1"       
 [69,] "1081"         "1"       
 [70,] "573"          "1"       
 [71,] "2"            "1"       
 [72,] "460"          "1"       
 [73,] "1526"         "1"       
 [74,] "739"          "1"       
 [75,] "1583"         "1"       
 [76,] "907"          "1"       
 [77,] "1162"         "1"       
 [78,] "1220"         "1"       
 [79,] "743"          "1"       
 [80,] "75"           "1"       
 [81,] "67"           "1"       
 [82,] "312"          "1"       
 [83,] "1063"         "1"       
 [84,] "1429"         "1"       
 [85,] "926"          "1"       
 [86,] "1368"         "1"       
 [87,] "1102"         "1"       
 [88,] "619"          "1"       
 [89,] "1250"         "1"       
 [90,] "415"          "1"       
 [91,] "590"          "1"       
 [92,] "711"          "1"       
 [93,] "391"          "1"       
 [94,] "18"           "1"       
 [95,] "529"          "1"       
 [96,] "183"          "1"       
 [97,] "129"          "1"       
 [98,] "1630"         "1"       
 [99,] "17"           "1"       
[100,] "1323"         "1"       
[101,] "869"          "1"       
[102,] "946"          "1"       
[103,] "642"          "1"       
[104,] "996"          "1"       
[105,] "510"          "1"       
[106,] "677"          "1"       
[107,] "710"          "1"       
[108,] "780"          "1"       
[109,] "1388"         "1"       
[110,] "695"          "1"       
[111,] "361"          "1"       
[112,] "871"          "1"       
[113,] "423"          "1"       
[114,] "1462"         "1"       
[115,] "40"           "1"       
[116,] "61"           "1"       
[117,] "1065"         "1"       
[118,] "132"          "1"       
[119,] "6"            "1"       
[120,] "7"            "1"       
[121,] "577"          "1"       
[122,] "1046"         "1"       
[123,] "1268"         "1"       
[124,] "654"          "1"       
[125,] "1035"         "1"       
[126,] "364"          "1"       
[127,] "1053"         "1"       
[128,] "48"           "1"       
[129,] "894"          "1"       
[130,] "24"           "1"       
[131,] "1111"         "1"       
[132,] "1158"         "1"       
[133,] "1449"         "1"       
[134,] "1580"         "1"       
[135,] "1170"         "1"       
[136,] "9"            "1"       
[137,] "269"          "1"       
[138,] "1311"         "1"       
[139,] "1305"         "1"       
[140,] "217"          "1"       
[141,] "1290"         "1"       
[142,] "1121"         "1"       
[143,] "70"           "1"       
[144,] "19"           "1"       
[145,] "811"          "1"       
[146,] "1025"         "1"       
[147,] "942"          "1"       
[148,] "675"          "1"       
[149,] "850"          "1"       

> pbc <- as.data.frame(list(precinct = pbc.pres$precinct, 
    pbuch = pbuch, ptotal = ptotal, pdeckard = pdeckard, pnelson = pnelson, 
    stotal = stotal, plowe = plowe, sstotal = sstotal, pmcguire = pmcguire, 
    shtotal = shtotal, useme.ss35 = useme.ss35, useme.us16 = useme.us16))

> pbc.complete <- cbind(pbc.pres, pbc.senate[, -1], 
    pbc.ss35[, -1], pbc.us16[, -1], useme.ss35, useme.us16, pbc.pres.total)

> fit1 <- glm(buchananm ~ nelson + deckard, data = pbc.complete[useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit1))

Call:
glm(formula = buchananm ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.ss35 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.1424  -1.3943  -0.3857   0.6849   5.7703  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9526     0.2647 -26.263   <2e-16 ***
nelson        3.3220     0.3496   9.503   <2e-16 ***
deckard       6.1608    17.4382   0.353    0.724    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 374.96  on 104  degrees of freedom
Residual deviance: 280.08  on 102  degrees of freedom
AIC: 6550.5

Number of Fisher Scoring iterations: 4


> print(summary(glm(pbuch ~ pnelson + pdeckard, data = pbc[pbc$useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = ptotal)))

Call:
glm(formula = pbuch ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.ss35 == 1, ], weights = ptotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.1424  -1.3943  -0.3857   0.6849   5.7703  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9526     0.2647 -26.263   <2e-16 ***
pnelson       3.3220     0.3496   9.503   <2e-16 ***
pdeckard      6.1608    17.4382   0.353    0.724    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 374.96  on 104  degrees of freedom
Residual deviance: 280.08  on 102  degrees of freedom
AIC: 6550.5

Number of Fisher Scoring iterations: 4


> fit2 <- glm(lowe ~ nelson + deckard, data = pbc.complete[useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit2))

Call:
glm(formula = lowe ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.ss35 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-5.2577  -0.9685  -0.1429   1.0635   4.8310  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -2.1204     0.1098 -19.307  < 2e-16 ***
nelson       -1.6471     0.1699  -9.695  < 2e-16 ***
deckard      19.4051     5.0074   3.875 0.000107 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 419.41  on 104  degrees of freedom
Residual deviance: 294.38  on 102  degrees of freedom
AIC: 24495

Number of Fisher Scoring iterations: 3


> print(summary(glm(plowe ~ pnelson + pdeckard, data = pbc[pbc$useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = sstotal)))

Call:
glm(formula = plowe ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.ss35 == 1, ], weights = sstotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-5.1029  -0.9595  -0.1413   1.0574   4.8281  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -2.1067     0.1106 -19.047  < 2e-16 ***
pnelson      -1.6704     0.1705  -9.796  < 2e-16 ***
pdeckard     19.2966     5.0217   3.843 0.000122 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 417.95  on 104  degrees of freedom
Residual deviance: 290.75  on 102  degrees of freedom
AIC: 24061

Number of Fisher Scoring iterations: 3


> fit3 <- glm(buchananm ~ nelson + deckard, data = pbc.complete[useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit3))

Call:
glm(formula = buchananm ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.us16 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7669  -1.0725  -0.3245   0.6811   5.6474  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9398     0.1843 -37.653   <2e-16 ***
nelson        3.3678     0.2692  12.511   <2e-16 ***
deckard       4.7514    12.0497   0.394    0.693    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 455.55  on 148  degrees of freedom
Residual deviance: 306.85  on 146  degrees of freedom
AIC: 10229

Number of Fisher Scoring iterations: 4


> print(summary(glm(pbuch ~ pnelson + pdeckard, data = pbc[pbc$useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = ptotal)))

Call:
glm(formula = pbuch ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.us16 == 1, ], weights = ptotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7669  -1.0725  -0.3245   0.6811   5.6474  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9398     0.1843 -37.653   <2e-16 ***
pnelson       3.3678     0.2692  12.511   <2e-16 ***
pdeckard      4.7514    12.0497   0.394    0.693    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 455.55  on 148  degrees of freedom
Residual deviance: 306.85  on 146  degrees of freedom
AIC: 10229

Number of Fisher Scoring iterations: 4


> fit4 <- glm(mcguire ~ nelson + deckard, data = pbc.complete[useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit4))

Call:
glm(formula = mcguire ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.us16 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7324  -1.3050  -0.3016   0.8905   5.0718  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -3.3420     0.1109 -30.132  < 2e-16 ***
nelson       -0.9988     0.1891  -5.283 1.27e-07 ***
deckard      26.1383     3.4097   7.666 1.78e-14 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 491.68  on 148  degrees of freedom
Residual deviance: 414.91  on 146  degrees of freedom
AIC: 24737

Number of Fisher Scoring iterations: 3


> print(summary(glm(pmcguire ~ pnelson + pdeckard, data = pbc[pbc$useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = shtotal)))

Call:
glm(formula = pmcguire ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.us16 == 1, ], weights = shtotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.6563  -1.2957  -0.2921   0.8685   5.1082  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -3.3418     0.1136 -29.412  < 2e-16 ***
pnelson      -0.9900     0.1937  -5.112 3.18e-07 ***
pdeckard     25.5344     3.4069   7.495 6.63e-14 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 469.50  on 148  degrees of freedom
Residual deviance: 396.87  on 146  degrees of freedom
AIC: 23724

Number of Fisher Scoring iterations: 3

> vote <- pbc
> 
> indx <- as.logical(vote$useme.ss35)
> str.dep         <- "plowe"
> outname         <- "ss35.lowe"
> initial.parms   <- c(-1.816408e+00,-1.794113e+00,5.005099e-01) ## from round4/v2 (pop 2500)
> initial.domains <- NULL
> 
> #run specific variables
> pop.size         <- 100;
> wait.generations <- 1;
> gradient.check   <- F;
> max.generations  <- wait.generations*10;
> 
> str.pop   <- "ptotal"
> str.indep <- c("pnelson","pdeckard")
> statename <- "PBC"
> 
> ## where we are going to store things...
> ps.flag <- T
> ps.dir  <- paste("postscript.lqd8.",str.dep,sep="");
> project <- paste("genoud.pro.lqd8.",str.dep,".ps",pop.size,".wg",wait.generations,".",sep="");
> project <- paste(project,system("date | sed 's/ //g'",T),sep="");
> ## ... and create the postscript directory if it does not exist.
> if ( ! file.exists(ps.dir) )
+   dir.create(ps.dir)
> 
> ## loop over regions/states/samples
> tmp.str.indep <- str.indep
> tmp.out <- 
+   lqd(mydata=vote[indx,],
+       nparms = 3,
+       str.pop,
+       str.dep,
+       tmp.str.indep,
+       sample.name     = statename ,
+       pop.size        = pop.size,
+       wait.generations= wait.generations,
+       max.generations = max.generations,
+       gradient.check  = gradient.check,
+       project   = project,
+       outlier.threshold = 2.5,
+       flag.print= T,
+       ps.dir    = ps.dir ,
+       ps.flag   = T,
+       pstart   = initial.parms,
+       mdomains = initial.domains 
+       )
[1] "mydata$pnelson"
[1] "mydata$pdeckard"

Call:
glm(formula = data.dep ~ -1 + data.indep, family = binomial(link = "logit"), 
    weights = data.pop)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-5.2577  -0.9685  -0.1429   1.0635   4.8310  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
data.indep1  -2.1204     0.1098 -19.307  < 2e-16 ***
data.indep2  -1.6471     0.1699  -9.695  < 2e-16 ***
data.indep3  19.4051     5.0074   3.875 0.000107 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 69739.12  on 105  degrees of freedom
Residual deviance:   294.38  on 102  degrees of freedom
AIC: 24495

Number of Fisher Scoring iterations: 3



Sat Feb 10 17:36:46 2001
Domains:
 -1.940512e+02   <=  X1   <=    1.940512e+02 
 -1.940512e+02   <=  X2   <=    1.940512e+02 
 -1.940512e+02   <=  X3   <=    1.940512e+02 

Data Type: Floating Point
Operators (code number, name, population) 
	(0) Cloning........................... 	15
	(1) Uniform Mutation.................. 	12
	(2) Boundary Mutation................. 	12
	(3) Non-Uniform Mutation.............. 	12
	(4) Polytope Crossover................ 	12
	(5) Multiple Point Simple Crossover... 	12
	(6) Whole Non-Uniform Mutation........ 	12
	(7) Heuristic Crossover............... 	12
	(8) Local-Minimum Crossover........... 	0

SOFT Maximum Number of Generations: 10
Maximum Nonchanging Generations: 1
Population size       : 100
Convergence Tolerance: 1.000000e-03

Using the BFGS Derivative Based Optimizer on the Best Individual Each Generation.
Not Checking Gradients before Stoping
Not Using Out of Bounds Individuals and Not Allowing Trespassing.



Minimization Problem.

Parameter B (hardcoded): 6
Parameter Q (hardcoded): 0.500000


STARTING VALUES


The 2 best initial individuals are
-1.82	-1.79	 0.50	
fitness = 6.922503e-01

-14.10	21.62	170.40	
fitness = 1.294032e+01


The worst fit of the population is: nan




Generation#	    Solution Value

      0 	6.922503e-01
GENERATION: 0 (initializing the population)
Fitness Value... 6.922503e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 5
#unique......... 100, #Total UniqueCount: 100
tobs............ 95
var 1:
best............ -1.816408e+00
mean............ 1.800349e+01
var............. 1.357068e+04
skewness........ -1.386766e-01
kurtosis........ 1.724114e+00
#null........... 0
tobs............ 100
var 2:
best............ -1.794113e+00
mean............ 2.734302e+00
var............. 1.216642e+04
skewness........ -1.868675e-02
kurtosis........ 1.972975e+00
#null........... 0
tobs............ 100
var 3:
best............ 5.005099e-01
mean............ -4.916616e-01
var............. 1.127494e+04
skewness........ -1.507640e-02
kurtosis........ 1.905369e+00
#null........... 0
tobs............ 100

GENERATION: 1
Fitness Value... 6.922503e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 0
#unique......... 58, #Total UniqueCount: 158
tobs............ 100
var 1:
best............ -1.816408e+00
mean............ -1.602076e+01
var............. 2.462773e+03
skewness........ 3.905749e-02
kurtosis........ 5.528853e+00
#null........... 0
tobs............ 100
var 2:
best............ -1.794113e+00
mean............ 2.145350e+01
var............. 3.839051e+03
skewness........ 3.576527e-01
kurtosis........ 3.965161e+00
#null........... 0
tobs............ 100
var 3:
best............ 5.005099e-01
mean............ 2.902835e+01
var............. 9.758158e+03
skewness........ -1.362010e-01
kurtosis........ 2.157190e+00
#null........... 0
tobs............ 100

GENERATION: 2
Fitness Value... 6.922503e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 0
#unique......... 36, #Total UniqueCount: 194
tobs............ 100
var 1:
best............ -1.816408e+00
mean............ -1.490145e-01
var............. 4.294374e+02
skewness........ 2.768178e+00
kurtosis........ 3.206206e+01
#null........... 0
tobs............ 100
var 2:
best............ -1.794113e+00
mean............ 2.397639e-01
var............. 3.280375e+02
skewness........ 6.639887e+00
kurtosis........ 5.724326e+01
#null........... 0
tobs............ 100
var 3:
best............ 5.005099e-01
mean............ -2.395974e-01
var............. 8.659559e+02
skewness........ -1.715763e+00
kurtosis........ 1.571059e+01
#null........... 0
tobs............ 100

Soft Generation Wait Limit Hit.
No Improvement in 1 Generations

Best Fit Found at Generation 1
Fit Value = 6.922503e-01


Parameters at the Solution (value, gradient):

 X[ 1] :	-1.816408e+00	G[ 1] :	-1.094175e+00
 X[ 2] :	-1.794113e+00	G[ 2] :	-6.947015e-01
 X[ 3] :	5.005099e-01	G[ 3] :	7.988638e-03

Solution Found Generation 1
Number of Generations Run 2


Sat Feb 10 17:37:02 2001
Total run time : 0 hours 0 minutes and 16 seconds
[1] "Saving GLM and RGENOUD Results"
expression(glm.PBC <<- glm1)
expression(gen.PBC.100 <<- gen3)
[1] "residuals$raw.res"
  [1] -0.09907105 -0.36775510  1.01075082 -1.22798630 -2.71326284 -0.47926989
  [7] -1.86837341 -0.38709499 -2.21274242 -2.56507376 -3.92102244 -1.29583943
 [13] -1.34003659  0.71446617 -2.45199298 -0.90131117 -3.12416704 -2.24604676
 [19]  0.07144984 -3.83734616 -0.49477656 -0.21288999  0.29965376  2.06178548
 [25] -1.66781496 -3.04441662 -0.74062846 -0.57027852  0.19425151  1.47025346
 [31] -0.72641770 -2.50335798 -1.46559555 -0.14626619 -1.11732928  0.97307472
 [37] -0.27975952 -0.81434631 -0.06781409 -3.06569471 -0.80787481 -1.72931814
 [43] -1.40101965 -0.89096213 -4.40708649 -0.37495184  0.88264501 -0.77679260
 [49]  0.20791946 -5.16014339  0.12036266 -1.22164129  0.74612210 -2.15561542
 [55] -0.82753164 -1.00626229  4.35798797  1.55415166  1.34493550  2.21680210
 [61]  1.16688514 -0.26108149  0.87243010  1.00783877 -0.41693467 -0.83487156
 [67] -1.42781350  0.44479642  1.13655718 -1.12695386 -0.36416120  0.01688426
 [73] -1.46683972  1.69664613  1.52710948  2.18461196  2.63652941 -1.37325626
 [79] -0.19950749 -4.34072234 -1.80895049 -2.48373144  1.49236245 -0.53936811
 [85]  1.73902026 -3.72909627  0.47935963 -0.33840875 -0.59738690 -0.78467140
 [91] -0.79114995  1.01998482 -2.69569818 -1.41539250  0.40049125 -2.61491921
 [97] -0.13332424 -0.94306226 -0.46374535 -0.79132135 -0.25668799  1.35043135
[103] -0.84726150 -1.01366018 -1.52225261
median: -0.5973869 
[1] "residuals$res"
  [1]  0.49831585  0.22963179  1.60813772 -0.63059941 -2.11587595  0.11811700
  [7] -1.27098651  0.21029191 -1.61535552 -1.96768687 -3.32363554 -0.69845254
 [13] -0.74264969  1.31185306 -1.85460609 -0.30392427 -2.52678015 -1.64865986
 [19]  0.66883674 -3.23995927  0.10261033  0.38449691  0.89704065  2.65917237
 [25] -1.07042807 -2.44702972 -0.14324156  0.02710838  0.79163840  2.06764036
 [31] -0.12903081 -1.90597108 -0.86820866  0.45112071 -0.51994238  1.57046161
 [37]  0.31762738 -0.21695942  0.52957281 -2.46830781 -0.21048791 -1.13193125
 [43] -0.80363276 -0.29357523 -3.80969960  0.22243506  1.48003191 -0.17940571
 [49]  0.80530636 -4.56275649  0.71774956 -0.62425440  1.34350900 -1.55822852
 [55] -0.23014474 -0.40887540  4.95537487  2.15153855  1.94232240  2.81418899
 [61]  1.76427203  0.33630540  1.46981699  1.60522566  0.18045222 -0.23748467
 [67] -0.83042660  1.04218331  1.73394408 -0.52956696  0.23322570  0.61427115
 [73] -0.86945282  2.29403302  2.12449638  2.78199886  3.23391630 -0.77586937
 [79]  0.39787940 -3.74333544 -1.21156359 -1.88634455  2.08974934  0.05801878
 [85]  2.33640716 -3.13170938  1.07674652  0.25897815  0.00000000 -0.18728451
 [91] -0.19376305  1.61737172 -2.09831129 -0.81800561  0.99787814 -2.01753232
 [97]  0.46406265 -0.34567536  0.13364155 -0.19393446  0.34069891  1.94781825
[103] -0.24987461 -0.41627329 -0.92486571
[1] "s0: 1.5362034315823"
sigma:  1.515210 
[1] "data: student, pred, dep"
                                 data.dep
  [1,]  0.32887569 0.04856932 0.047951177
  [2,]  0.15155110 0.04972861 0.044117647
  [3,]  1.06132967 0.05015669 0.056557377
  [4,] -0.41617944 0.04683289 0.039789790
  [5,] -1.39642389 0.05080216 0.036151961
  [6,]  0.07795420 0.04989535 0.044025157
  [7,] -0.83881852 0.07350514 0.000000000
  [8,]  0.13878727 0.03819643 0.026315789
  [9,] -1.06609324 0.04661832 0.033846154
 [10,] -1.29862289 0.04128213 0.028500620
 [11,] -2.19351426 0.05532348 0.030327215
 [12,] -0.46096077 0.03568718 0.024904215
 [13,] -0.49012976 0.03544054 0.024096386
 [14,]  0.86578939 0.02981804 0.044776119
 [15,] -1.22399248 0.03276327 0.017094017
 [16,] -0.20058223 0.03556248 0.028619529
 [17,] -1.66761013 0.03327788 0.017883756
 [18,] -1.08807325 0.07038144 0.046125461
 [19,]  0.44141510 0.04497387 0.045454545
 [20,] -2.13829006 0.03831938 0.017857143
 [21,]  0.06772019 0.05941913 0.055616140
 [22,]  0.25375810 0.03199016 0.030651341
 [23,]  0.59202384 0.05484840 0.057177616
 [24,]  1.75498560 0.03726591 0.090909091
 [25,] -0.70645509 0.04526809 0.033333333
 [26,] -1.61497689 0.04138301 0.021413276
 [27,] -0.09453576 0.04770087 0.043378995
 [28,]  0.01789083 0.13986544 0.000000000
 [29,]  0.52246105 0.05925580 0.060555088
 [30,]  1.36458964 0.05871783 0.069230769
 [31,] -0.08515702 0.07474272 0.058823529
 [32,] -1.25789206 0.03346607 0.012474012
 [33,] -0.57299546 0.06417643 0.050964187
 [34,]  0.29772810 0.05996980 0.059096946
 [35,] -0.34314864 0.06167747 0.052752294
 [36,]  1.03646441 0.05771301 0.064369900
 [37,]  0.20962593 0.04706944 0.043307087
 [38,] -0.14318765 0.03789923 0.027667984
 [39,]  0.34950448 0.05827891 0.056338028
 [40,] -1.62901988 0.05267239 0.027343750
 [41,] -0.13891663 0.03224868 0.023809524
 [42,] -0.74704561 0.03111260 0.013201320
 [43,] -0.53037702 0.03362505 0.023474178
 [44,] -0.19375213 0.03322458 0.028708134
 [45,] -2.51430408 0.06157089 0.009569378
 [46,]  0.14680144 0.05050064 0.047120419
 [47,]  0.97678312 0.06905272 0.125000000
 [48,] -0.11840317 0.06330590 0.035714286
 [49,]  0.53148155 0.04839770 0.050438596
 [50,] -3.01130233 0.07221344 0.014141414
 [51,]  0.47369631 0.04296356 0.045454545
 [52,] -0.41199190 0.05461009 0.034090909
 [53,]  0.88668150 0.04979673 0.057339450
 [54,] -1.02839088 0.05507377 0.042893726
 [55,] -0.15188963 0.03872299 0.000000000
 [56,] -0.26984728 0.05542975 0.047619048
 [57,]  3.27042039 0.04159440 0.076069731
 [58,]  1.41996029 0.03557114 0.065420561
 [59,]  1.28188300 0.05121222 0.060606061
 [60,]  1.85729260 0.04331840 0.067901235
 [61,]  1.16437432 0.04010943 0.049488055
 [62,]  0.22195294 0.05988597 0.057142857
 [63,]  0.97004154 0.04634216 0.053391053
 [64,]  1.05940779 0.04958298 0.066265060
 [65,]  0.11909384 0.04373539 0.035714286
 [66,] -0.15673379 0.07187891 0.000000000
 [67,] -0.54806027 0.04790909 0.029520295
 [68,]  0.68781427 0.05511635 0.069767442
 [69,]  1.14435865 0.04554776 0.054441261
 [70,] -0.34950062 0.05444186 0.044374010
 [71,]  0.15392298 0.06218351 0.000000000
 [72,]  0.40540322 0.06423474 0.064352244
 [73,] -0.57381658 0.06571676 0.052702703
 [74,]  1.51400299 0.05986103 0.070527097
 [75,]  1.40211315 0.04821750 0.056998557
 [76,]  1.83604793 0.05492600 0.073806078
 [77,]  2.13430186 0.04610748 0.075208914
 [78,] -0.51205389 0.06230332 0.046568627
 [79,]  0.26259021 0.04696233 0.044444444
 [80,] -2.47050544 0.07828683 0.038777908
 [81,] -0.79960092 0.05105426 0.019867550
 [82,] -1.24493905 0.06311260 0.040462428
 [83,]  1.37918100 0.05537206 0.083333333
 [84,]  0.03829091 0.06472170 0.048387097
 [85,]  1.54196884 0.05650994 0.120000000
 [86,] -2.06684791 0.06292556 0.030585106
 [87,]  0.71062511 0.05535443 0.059405941
 [88,]  0.17091894 0.05202752 0.047445255
 [89,]  0.00000000 0.05136702 0.034482759
 [90,] -0.12360297 0.04238232 0.028776978
 [91,] -0.12787865 0.08207775 0.000000000
 [92,]  1.06742387 0.06576374 0.133333333
 [93,] -1.38483166 0.03658933 0.020992366
 [94,] -0.53986273 0.05180520 0.041313559
 [95,]  0.65857399 0.06341084 0.083333333
 [96,] -1.33151961 0.04930226 0.032317636
 [97,]  0.30626946 0.05321654 0.052213394
 [98,] -0.22813688 0.05485383 0.048543689
 [99,]  0.08819999 0.04827038 0.045659164
[100,] -0.12799177 0.05442251 0.049906425
[101,]  0.22485255 0.05170337 0.050041701
[102,]  1.28551011 0.03194803 0.111111111
[103,] -0.16491084 0.05806131 0.052588997
[104,] -0.27472970 0.05903886 0.050649351
[105,] -0.61038766 0.05380512 0.043076923
> 
> hist(tmp.out$student)
> eval(parse(text=paste(outname,".",pop.size,".",wait.generations,"<- tmp.out",sep="")))
> proc.time()
[1] 18.98  1.25 20.70  0.00  0.00
> 
