
R : Copyright 2000, The R Development Core Team
Version 1.2.0  (2000-12-15)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type `license()' or `licence()' for distribution details.

R is a collaborative project with many contributors.
Type `contributors()' for more information.

Type `demo()' for some demos, `help()' for on-line help, or
`help.start()' for a HTML browser interface to help.
Type `q()' to quit R.

[Previously saved workspace restored]

> invisible(options(echo = TRUE))
> options(warn=1)
> source("../rgenoud.R");
> source("../function.lqd8.R",echo=T,max.deparse.length = 1000)

> lqd <- function(mydata, nparms = 3, str.pop, str.dep, 
    str.indep, sample.name, pop.size, wait.generations, max.generations = 20, 
    gradient.check, project, outlier.threshold = 2.5, flag.print = T, 
    ps.dir = "postscript", ps.flag = T, pstart = NULL, mdomains = NULL) {
    obs <- dim(mydata)[1]
    h <- ceiling((obs + nparms)/2)
    diflen <- (obs * (obs - 1))/2
    hidx <- (h * (h - 1))/2
    data.pop <- eval(parse(text = paste("mydata$", str.pop, sep = "")))
    data.dep <- eval(parse(text = paste("mydata$", str.dep, sep = "")))
    data.indep <- matrix(NA, obs, length(str.indep) + 1)
    data.indep[, 1] <- 1
    for (i in 1:length(str.indep)) {
        statement <- paste("mydata$", str.indep[i], sep = "")
        print(statement)
        tmp <- eval(parse(text = statement))
        data.indep[, i + 1] <- tmp
    }
    fit.lqd1 <- function(foo) {
        mu <- c(data.indep %*% foo)
        y <- 1/(1 + exp(-1 * mu))
        rawres <- (data.pop * (data.dep - y))/(sqrt(data.pop .... [TRUNCATED] 
> library("KernSmooth");
KernSmooth 2.22 installed
Copyright M. P. Wand 1997
> 
> source("../data.pbc.R",echo=T,max.deparse.length = 1000) ## MySQL retrieves data

> pbc.pres <- read.table(file = "../2000pres.parsed.txt", 
    header = T, as.is = T)

> pbc.pres <- pbc.pres[, -1]

> ptotal <- pbc.pres$bushm + pbc.pres$gorem + pbc.pres$brownem + 
    pbc.pres$naderm + pbc.pres$harrism + pbc.pres$hagelinm + 
    pbc.pres$buchananm + pbc.pres$mcreynoldsm + pbc.pres$phillipsm + 
    pbc.pres$mooreheadm

> pbuch <- pbc.pres$buchananm/ptotal

> pbc.pres.total <- pbc.pres$bushm + pbc.pres$gorem + 
    pbc.pres$brownem + pbc.pres$naderm + pbc.pres$harrism + pbc.pres$hagelinm + 
    pbc.pres$buchananm + pbc.pres$mcreynoldsm + pbc.pres$phillipsm + 
    pbc.pres$mooreheadm

> pbc.pres[, -1] <- pbc.pres[, -1]/pbc.pres.total

> useme.ss35 <- rep(0, times = length(pbc.pres.total))

> useme.us16 <- rep(0, times = length(pbc.pres.total))

> pbc.senate <- read.table(file = "../2000senate.parsed.txt", 
    header = T, as.is = T)

> stotal <- pbc.senate$mccollum + pbc.senate$nelson + 
    pbc.senate$simonetta + pbc.senate$deckard + pbc.senate$logan + 
    pbc.senate$martin + pbc.senate$mccormick + pbc.senate$writein

> pdeckard <- pbc.senate$deckard/stotal

> pnelson <- pbc.senate$nelson/stotal

> pbc.senate.total <- pbc.senate$mccollum + pbc.senate$nelson + 
    pbc.senate$simonetta + pbc.senate$deckard + pbc.senate$logan + 
    pbc.senate$martin + pbc.senate$mccormick + pbc.senate$writein

> pbc.senate[, -1] <- pbc.senate[, -1]/pbc.senate.total

> pbc.ss35 <- read.table(file = "../pbc.statesenate35.all.txt", 
    header = T, as.is = T)

> useme.ss35[as.logical(pbc.ss35$vaughan > -99)] <- 1

> sstotal <- pbc.ss35$vaughan + pbc.ss35$rossin + pbc.ss35$lowe

> plowe <- pbc.ss35$lowe/sstotal

> pbc.ss35.total <- pbc.ss35$vaughan + pbc.ss35$rossin + 
    pbc.ss35$lowe

> pbc.ss35[, -1] <- pbc.ss35[, -1]/pbc.ss35.total

> pbc.us16 <- read.table(file = "../pbc.ushouse16.all.txt", 
    header = T, as.is = T)

> useme.us16[as.logical(pbc.us16$foley > -99)] <- 1

> shtotal <- pbc.us16$foley + pbc.us16$brown + pbc.us16$mcguire + 
    pbc.us16$writein

> pmcguire <- pbc.us16$mcguire/shtotal

> pbc.us16.total <- pbc.us16$foley + pbc.us16$brown + 
    pbc.us16$mcguire + pbc.us16$writein

> pbc.us16[, -1] <- pbc.us16[, -1]/pbc.us16.total

> useme.ss35[532:637] <- 0

> useme.us16[532:637] <- 0

> useme.ss35[is.na(plowe)] <- 0

> useme.us16[is.na(pmcguire)] <- 0

> print(cbind(pbc.pres$precinct[useme.ss35 == 1], round(cbind(plowe, 
    pbc.ss35$lowe, plowe - pbc.ss35$lowe, sstotal, ptotal, pbc.ss35.total, 
    pbc.pres.total, useme.ss35)[useme.ss35 == 1, ], 4)))
              plowe                 sstotal ptotal pbc.ss35.total
  [1,] "13"   "0.048"  "0.048"  "0" "1147"  "1187" "1147"        
  [2,] "13A"  "0.0441" "0.0441" "0" "204"   "203"  "204"         
  [3,] "18A"  "0.0566" "0.0566" "0" "1220"  "1188" "1220"        
  [4,] "18C"  "0.0398" "0.0398" "0" "1332"  "1357" "1332"        
  [5,] "18D"  "0.0362" "0.0362" "0" "1632"  "1654" "1632"        
  [6,] "18F"  "0.044"  "0.044"  "0" "318"   "316"  "318"         
  [7,] "18G"  "0"      "0"      "0" "41"    "44"   "41"          
  [8,] "18H"  "0.0263" "0.0263" "0" "38"    "39"   "38"          
  [9,] "18J"  "0.0338" "0.0338" "0" "1300"  "1334" "1300"        
 [10,] "19"   "0.0285" "0.0285" "0" "1614"  "1594" "1614"        
 [11,] "19A"  "0.0303" "0.0303" "0" "1253"  "1286" "1253"        
 [12,] "20"   "0.0249" "0.0249" "0" "522"   "497"  "522"         
 [13,] "21"   "0.0241" "0.0241" "0" "498"   "477"  "498"         
 [14,] "21A"  "0.0448" "0.0448" "0" "67"    "66"   "67"          
 [15,] "22"   "0.0171" "0.0171" "0" "819"   "776"  "819"         
 [16,] "23"   "0.0286" "0.0286" "0" "594"   "578"  "594"         
 [17,] "24"   "0.0179" "0.0179" "0" "1342"  "1325" "1342"        
 [18,] "26C"  "0.0461" "0.0461" "0" "542"   "561"  "542"         
 [19,] "27"   "0.0455" "0.0455" "0" "968"   "949"  "968"         
 [20,] "29"   "0.0179" "0.0179" "0" "1288"  "1296" "1288"        
 [21,] "29A"  "0.0556" "0.0556" "0" "917"   "946"  "917"         
 [22,] "29B"  "0.0307" "0.0307" "0" "783"   "783"  "783"         
 [23,] "29D"  "0.0572" "0.0572" "0" "822"   "858"  "822"         
 [24,] "29F"  "0.0909" "0.0909" "0" "55"    "53"   "55"          
 [25,] "30"   "0.0333" "0.0333" "0" "840"   "844"  "840"         
 [26,] "30A"  "0.0214" "0.0214" "0" "934"   "922"  "934"         
 [27,] "30B"  "0.0434" "0.0434" "0" "1314"  "1334" "1314"        
 [28,] "31H"  "0"      "0"      "0" "2"     "2"    "2"           
 [29,] "32"   "0.0606" "0.0606" "0" "1189"  "1246" "1189"        
 [30,] "32A"  "0.0692" "0.0692" "0" "1040"  "1081" "1040"        
 [31,] "36"   "0.0588" "0.0588" "0" "153"   "144"  "153"         
 [32,] "40"   "0.0125" "0.0125" "0" "481"   "460"  "481"         
 [33,] "41A"  "0.051"  "0.051"  "0" "726"   "739"  "726"         
 [34,] "41B"  "0.0591" "0.0591" "0" "1506"  "1583" "1506"        
 [35,] "41C"  "0.0528" "0.0528" "0" "872"   "907"  "872"         
 [36,] "41D"  "0.0644" "0.0644" "0" "1103"  "1162" "1103"        
 [37,] "44"   "0.0433" "0.0433" "0" "254"   "248"  "254"         
 [38,] "44B"  "0.0277" "0.0277" "0" "253"   "231"  "253"         
 [39,] "44C"  "0.0563" "0.0563" "0" "71"    "67"   "71"          
 [40,] "51"   "0.0273" "0.0273" "0" "768"   "731"  "768"         
 [41,] "54"   "0.0238" "0.0238" "0" "294"   "286"  "294"         
 [42,] "55"   "0.0132" "0.0132" "0" "303"   "281"  "303"         
 [43,] "60"   "0.0235" "0.0235" "0" "639"   "619"  "639"         
 [44,] "61"   "0.0287" "0.0287" "0" "1254"  "1250" "1254"        
 [45,] "61A"  "0.0096" "0.0096" "0" "418"   "415"  "418"         
 [46,] "61B"  "0.0471" "0.0471" "0" "573"   "590"  "573"         
 [47,] "61C"  "0.125"  "0.125"  "0" "16"    "16"   "16"          
 [48,] "65"   "0.0357" "0.0357" "0" "28"    "47"   "28"          
 [49,] "73A"  "0.0504" "0.0504" "0" "456"   "478"  "456"         
 [50,] "73B"  "0.0141" "0.0141" "0" "495"   "529"  "495"         
 [51,] "73C"  "0.0455" "0.0455" "0" "88"    "96"   "88"          
 [52,] "73D"  "0.0341" "0.0341" "0" "176"   "183"  "176"         
 [53,] "73E"  "0.0573" "0.0573" "0" "436"   "463"  "436"         
 [54,] "73H"  "0.0429" "0.0429" "0" "1562"  "1630" "1562"        
 [55,] "73I"  "0"      "0"      "0" "18"    "17"   "18"          
 [56,] "74B"  "0.0476" "0.0476" "0" "798"   "869"  "798"         
 [57,] "74C"  "0.0761" "0.0761" "0" "631"   "637"  "631"         
 [58,] "74D"  "0.0654" "0.0654" "0" "107"   "93"   "107"         
 [59,] "74G"  "0.0606" "0.0606" "0" "924"   "996"  "924"         
 [60,] "76"   "0.0679" "0.0679" "0" "324"   "337"  "324"         
 [61,] "76A"  "0.0495" "0.0495" "0" "586"   "596"  "586"         
 [62,] "78"   "0.0571" "0.0571" "0" "490"   "510"  "490"         
 [63,] "79"   "0.0534" "0.0534" "0" "693"   "677"  "693"         
 [64,] "83"   "0.0663" "0.0663" "0" "166"   "172"  "166"         
 [65,] "86A"  "0.0357" "0.0357" "0" "112"   "113"  "112"         
 [66,] "87"   "0"      "0"      "0" "9"     "9"    "9"           
 [67,] "87A"  "0.0295" "0.0295" "0" "271"   "275"  "271"         
 [68,] "87B"  "0.0698" "0.0698" "0" "43"    "48"   "43"          
 [69,] "91"   "0.0544" "0.0544" "0" "698"   "710"  "698"         
 [70,] "92"   "0.0444" "0.0444" "0" "631"   "645"  "631"         
 [71,] "92A"  "0"      "0"      "0" "2"     "2"    "2"           
 [72,] "93"   "0.0644" "0.0644" "0" "1181"  "1241" "1181"        
 [73,] "93A"  "0.0527" "0.0527" "0" "740"   "780"  "740"         
 [74,] "93B"  "0.0705" "0.0705" "0" "1347"  "1424" "1347"        
 [75,] "94"   "0.057"  "0.057"  "0" "1386"  "1388" "1386"        
 [76,] "95"   "0.0738" "0.0738" "0" "691"   "695"  "691"         
 [77,] "95A"  "0.0752" "0.0752" "0" "359"   "361"  "359"         
 [78,] "96"   "0.0466" "0.0466" "0" "408"   "445"  "408"         
 [79,] "96A"  "0.0444" "0.0444" "0" "270"   "281"  "270"         
 [80,] "97"   "0.0388" "0.0388" "0" "851"   "871"  "851"         
 [81,] "97A"  "0.0199" "0.0199" "0" "151"   "163"  "151"         
 [82,] "101"  "0.0405" "0.0405" "0" "692"   "711"  "692"         
 [83,] "101A" "0.0833" "0.0833" "0" "144"   "149"  "144"         
 [84,] "104A" "0.0484" "0.0484" "0" "62"    "66"   "62"          
 [85,] "104C" "0.12"   "0.12"   "0" "50"    "40"   "50"          
 [86,] "107"  "0.0306" "0.0306" "0" "752"   "784"  "752"         
 [87,] "108"  "0.0594" "0.0594" "0" "707"   "732"  "707"         
 [88,] "108A" "0.0474" "0.0474" "0" "274"   "269"  "274"         
 [89,] "108B" "0.0345" "0.0345" "0" "58"    "61"   "58"          
 [90,] "114"  "0.0288" "0.0288" "0" "139"   "135"  "139"         
 [91,] "114D" "0"      "0"      "0" "7"     "7"    "7"           
 [92,] "128K" "0.1333" "0.1333" "0" "15"    "14"   "15"          
 [93,] "135B" "0.021"  "0.021"  "0" "1048"  "1053" "1048"        
 [94,] "137"  "0.0413" "0.0413" "0" "944"   "894"  "944"         
 [95,] "143"  "0.0833" "0.0833" "0" "24"    "24"   "24"          
 [96,] "144"  "0.0323" "0.0323" "0" "1083"  "1111" "1083"        
 [97,] "144A" "0.0522" "0.0522" "0" "881"   "890"  "881"         
 [98,] "144B" "0.0485" "0.0485" "0" "1133"  "1158" "1133"        
 [99,] "144C" "0.0457" "0.0457" "0" "1555"  "1449" "1555"        
[100,] "144D" "0.0499" "0.0499" "0" "1603"  "1580" "1603"        
[101,] "144E" "0.05"   "0.05"   "0" "1199"  "1170" "1199"        
[102,] "144F" "0.1111" "0.1111" "0" "9"     "9"    "9"           
[103,] "159"  "0.0526" "0.0526" "0" "1236"  "1311" "1236"        
[104,] "159J" "0.0506" "0.0506" "0" "770"   "811"  "770"         
[105,] "159K" "0.0431" "0.0431" "0" "975"   "1025" "975"         
       pbc.pres.total useme.ss35
  [1,] "1187"         "1"       
  [2,] "203"          "1"       
  [3,] "1188"         "1"       
  [4,] "1357"         "1"       
  [5,] "1654"         "1"       
  [6,] "316"          "1"       
  [7,] "44"           "1"       
  [8,] "39"           "1"       
  [9,] "1334"         "1"       
 [10,] "1594"         "1"       
 [11,] "1286"         "1"       
 [12,] "497"          "1"       
 [13,] "477"          "1"       
 [14,] "66"           "1"       
 [15,] "776"          "1"       
 [16,] "578"          "1"       
 [17,] "1325"         "1"       
 [18,] "561"          "1"       
 [19,] "949"          "1"       
 [20,] "1296"         "1"       
 [21,] "946"          "1"       
 [22,] "783"          "1"       
 [23,] "858"          "1"       
 [24,] "53"           "1"       
 [25,] "844"          "1"       
 [26,] "922"          "1"       
 [27,] "1334"         "1"       
 [28,] "2"            "1"       
 [29,] "1246"         "1"       
 [30,] "1081"         "1"       
 [31,] "144"          "1"       
 [32,] "460"          "1"       
 [33,] "739"          "1"       
 [34,] "1583"         "1"       
 [35,] "907"          "1"       
 [36,] "1162"         "1"       
 [37,] "248"          "1"       
 [38,] "231"          "1"       
 [39,] "67"           "1"       
 [40,] "731"          "1"       
 [41,] "286"          "1"       
 [42,] "281"          "1"       
 [43,] "619"          "1"       
 [44,] "1250"         "1"       
 [45,] "415"          "1"       
 [46,] "590"          "1"       
 [47,] "16"           "1"       
 [48,] "47"           "1"       
 [49,] "478"          "1"       
 [50,] "529"          "1"       
 [51,] "96"           "1"       
 [52,] "183"          "1"       
 [53,] "463"          "1"       
 [54,] "1630"         "1"       
 [55,] "17"           "1"       
 [56,] "869"          "1"       
 [57,] "637"          "1"       
 [58,] "93"           "1"       
 [59,] "996"          "1"       
 [60,] "337"          "1"       
 [61,] "596"          "1"       
 [62,] "510"          "1"       
 [63,] "677"          "1"       
 [64,] "172"          "1"       
 [65,] "113"          "1"       
 [66,] "9"            "1"       
 [67,] "275"          "1"       
 [68,] "48"           "1"       
 [69,] "710"          "1"       
 [70,] "645"          "1"       
 [71,] "2"            "1"       
 [72,] "1241"         "1"       
 [73,] "780"          "1"       
 [74,] "1424"         "1"       
 [75,] "1388"         "1"       
 [76,] "695"          "1"       
 [77,] "361"          "1"       
 [78,] "445"          "1"       
 [79,] "281"          "1"       
 [80,] "871"          "1"       
 [81,] "163"          "1"       
 [82,] "711"          "1"       
 [83,] "149"          "1"       
 [84,] "66"           "1"       
 [85,] "40"           "1"       
 [86,] "784"          "1"       
 [87,] "732"          "1"       
 [88,] "269"          "1"       
 [89,] "61"           "1"       
 [90,] "135"          "1"       
 [91,] "7"            "1"       
 [92,] "14"           "1"       
 [93,] "1053"         "1"       
 [94,] "894"          "1"       
 [95,] "24"           "1"       
 [96,] "1111"         "1"       
 [97,] "890"          "1"       
 [98,] "1158"         "1"       
 [99,] "1449"         "1"       
[100,] "1580"         "1"       
[101,] "1170"         "1"       
[102,] "9"            "1"       
[103,] "1311"         "1"       
[104,] "811"          "1"       
[105,] "1025"         "1"       

> print(cbind(pbc.pres$precinct[useme.us16 == 1], round(cbind(pmcguire, 
    pbc.us16$mcguire, pmcguire - pbc.us16$mcguire, shtotal, ptotal, 
    pbc.us16.total, pbc.pres.total, useme.us16)[useme.us16 == 
    1, ], 4)))
              pmcguire              shtotal ptotal pbc.us16.total
  [1,] "1"    "0.021"  "0.021"  "0" "1046"  "1057" "1046"        
  [2,] "1A"   "0.0147" "0.0147" "0" "887"   "965"  "887"         
  [3,] "1B"   "0.015"  "0.015"  "0" "1001"  "1036" "1001"        
  [4,] "1C"   "0.0219" "0.0219" "0" "957"   "1027" "957"         
  [5,] "2"    "0.0145" "0.0145" "0" "1444"  "1511" "1444"        
  [6,] "3"    "0.029"  "0.029"  "0" "1378"  "1420" "1378"        
  [7,] "3A"   "0.027"  "0.027"  "0" "519"   "534"  "519"         
  [8,] "3B"   "0.0108" "0.0108" "0" "556"   "581"  "556"         
  [9,] "3C"   "0.0146" "0.0146" "0" "1162"  "1203" "1162"        
 [10,] "4"    "0.0256" "0.0256" "0" "780"   "813"  "780"         
 [11,] "4A"   "0.0271" "0.0271" "0" "776"   "826"  "776"         
 [12,] "4B"   "0.0125" "0.0125" "0" "1043"  "1115" "1043"        
 [13,] "4C"   "0.0038" "0.0038" "0" "529"   "567"  "529"         
 [14,] "4D"   "0.0194" "0.0194" "0" "1136"  "1174" "1136"        
 [15,] "4E"   "0.0111" "0.0111" "0" "629"   "651"  "629"         
 [16,] "5"    "0.0242" "0.0242" "0" "537"   "562"  "537"         
 [17,] "5A"   "0.0277" "0.0277" "0" "1155"  "1211" "1155"        
 [18,] "5B"   "0.0226" "0.0226" "0" "1552"  "1644" "1552"        
 [19,] "5C"   "0.0166" "0.0166" "0" "602"   "619"  "602"         
 [20,] "5D"   "0.0315" "0.0315" "0" "984"   "1010" "984"         
 [21,] "5E"   "0.013"  "0.013"  "0" "460"   "483"  "460"         
 [22,] "6"    "0.0273" "0.0273" "0" "1247"  "1334" "1247"        
 [23,] "12"   "0.0323" "0.0323" "0" "526"   "556"  "526"         
 [24,] "12A"  "0.037"  "0.037"  "0" "1244"  "1306" "1244"        
 [25,] "12B"  "0.0222" "0.0222" "0" "361"   "383"  "361"         
 [26,] "12C"  "0.0303" "0.0303" "0" "1454"  "1516" "1454"        
 [27,] "12D"  "0.0403" "0.0403" "0" "1043"  "1097" "1043"        
 [28,] "13"   "0.0203" "0.0203" "0" "1134"  "1187" "1134"        
 [29,] "13A"  "0.0053" "0.0053" "0" "190"   "203"  "190"         
 [30,] "13B"  "0.0385" "0.0385" "0" "130"   "134"  "130"         
 [31,] "13C"  "0.0332" "0.0332" "0" "301"   "296"  "301"         
 [32,] "13D"  "0.0208" "0.0208" "0" "48"    "50"   "48"          
 [33,] "14"   "0.0099" "0.0099" "0" "911"   "950"  "911"         
 [34,] "16"   "0.0251" "0.0251" "0" "1395"  "1445" "1395"        
 [35,] "16A"  "0.0103" "0.0103" "0" "873"   "949"  "873"         
 [36,] "17"   "0.0321" "0.0321" "0" "467"   "485"  "467"         
 [37,] "17B"  "0.0357" "0.0357" "0" "168"   "183"  "168"         
 [38,] "18A"  "0.0259" "0.0259" "0" "1160"  "1188" "1160"        
 [39,] "18B"  "0.0268" "0.0268" "0" "1120"  "1159" "1120"        
 [40,] "18C"  "0.0171" "0.0171" "0" "1285"  "1357" "1285"        
 [41,] "18D"  "0.0176" "0.0176" "0" "1591"  "1654" "1591"        
 [42,] "18F"  "0.01"   "0.01"   "0" "299"   "316"  "299"         
 [43,] "18J"  "0.0145" "0.0145" "0" "1240"  "1334" "1240"        
 [44,] "19"   "0.0105" "0.0105" "0" "1530"  "1594" "1530"        
 [45,] "19A"  "0.0179" "0.0179" "0" "1231"  "1286" "1231"        
 [46,] "20"   "0.023"  "0.023"  "0" "478"   "497"  "478"         
 [47,] "21"   "0.0108" "0.0108" "0" "463"   "477"  "463"         
 [48,] "21A"  "0"      "0"      "0" "66"    "66"   "66"          
 [49,] "22"   "0.0078" "0.0078" "0" "770"   "776"  "770"         
 [50,] "23"   "0.0261" "0.0261" "0" "537"   "578"  "537"         
 [51,] "24"   "0.011"  "0.011"  "0" "1271"  "1325" "1271"        
 [52,] "25"   "0.0264" "0.0264" "0" "455"   "475"  "455"         
 [53,] "26B"  "0.04"   "0.04"   "0" "525"   "547"  "525"         
 [54,] "26C"  "0.0242" "0.0242" "0" "537"   "561"  "537"         
 [55,] "27"   "0.0167" "0.0167" "0" "899"   "949"  "899"         
 [56,] "29"   "0.0097" "0.0097" "0" "1235"  "1296" "1235"        
 [57,] "29A"  "0.0285" "0.0285" "0" "911"   "946"  "911"         
 [58,] "29B"  "0.0055" "0.0055" "0" "728"   "783"  "728"         
 [59,] "29C"  "0.0245" "0.0245" "0" "653"   "702"  "653"         
 [60,] "29D"  "0.0181" "0.0181" "0" "829"   "858"  "829"         
 [61,] "29F"  "0.0556" "0.0556" "0" "54"    "53"   "54"          
 [62,] "30"   "0.0194" "0.0194" "0" "826"   "844"  "826"         
 [63,] "30A"  "0.009"  "0.009"  "0" "893"   "922"  "893"         
 [64,] "30B"  "0.0171" "0.0171" "0" "1289"  "1334" "1289"        
 [65,] "31A"  "0.017"  "0.017"  "0" "1116"  "1163" "1116"        
 [66,] "31C"  "0.0269" "0.0269" "0" "558"   "598"  "558"         
 [67,] "31H"  "0"      "0"      "0" "1"     "2"    "1"           
 [68,] "32"   "0.0201" "0.0201" "0" "1196"  "1246" "1196"        
 [69,] "32A"  "0.0417" "0.0417" "0" "1054"  "1081" "1054"        
 [70,] "37"   "0.0134" "0.0134" "0" "522"   "573"  "522"         
 [71,] "38A"  "0"      "0"      "0" "2"     "2"    "2"           
 [72,] "40"   "0.0183" "0.0183" "0" "438"   "460"  "438"         
 [73,] "41"   "0.0279" "0.0279" "0" "1467"  "1526" "1467"        
 [74,] "41A"  "0.027"  "0.027"  "0" "703"   "739"  "703"         
 [75,] "41B"  "0.0324" "0.0324" "0" "1514"  "1583" "1514"        
 [76,] "41C"  "0.0231" "0.0231" "0" "867"   "907"  "867"         
 [77,] "41D"  "0.0405" "0.0405" "0" "1110"  "1162" "1110"        
 [78,] "42"   "0.0229" "0.0229" "0" "1177"  "1220" "1177"        
 [79,] "42A"  "0.0172" "0.0172" "0" "697"   "743"  "697"         
 [80,] "43"   "0"      "0"      "0" "73"    "75"   "73"          
 [81,] "44C"  "0.0128" "0.0128" "0" "78"    "67"   "78"          
 [82,] "46A"  "0.0338" "0.0338" "0" "296"   "312"  "296"         
 [83,] "47"   "0.0372" "0.0372" "0" "1021"  "1063" "1021"        
 [84,] "47A"  "0.0213" "0.0213" "0" "1364"  "1429" "1364"        
 [85,] "47B"  "0.0136" "0.0136" "0" "884"   "926"  "884"         
 [86,] "47C"  "0.011"  "0.011"  "0" "1278"  "1368" "1278"        
 [87,] "47D"  "0.0137" "0.0137" "0" "1024"  "1102" "1024"        
 [88,] "60"   "0.0068" "0.0068" "0" "585"   "619"  "585"         
 [89,] "61"   "0.0114" "0.0114" "0" "1141"  "1250" "1141"        
 [90,] "61A"  "0.0025" "0.0025" "0" "397"   "415"  "397"         
 [91,] "61B"  "0.0212" "0.0212" "0" "566"   "590"  "566"         
 [92,] "65A"  "0.0169" "0.0169" "0" "649"   "711"  "649"         
 [93,] "65B"  "0.0162" "0.0162" "0" "371"   "391"  "371"         
 [94,] "65C"  "0.1053" "0.1053" "0" "19"    "18"   "19"          
 [95,] "73B"  "0.0061" "0.0061" "0" "489"   "529"  "489"         
 [96,] "73D"  "0.0171" "0.0171" "0" "175"   "183"  "175"         
 [97,] "73F"  "0"      "0"      "0" "123"   "129"  "123"         
 [98,] "73H"  "0.017"  "0.017"  "0" "1530"  "1630" "1530"        
 [99,] "73I"  "0"      "0"      "0" "16"    "17"   "16"          
[100,] "74"   "0.0112" "0.0112" "0" "1254"  "1323" "1254"        
[101,] "74B"  "0.021"  "0.021"  "0" "808"   "869"  "808"         
[102,] "74E"  "0.0067" "0.0067" "0" "902"   "946"  "902"         
[103,] "74F"  "0.0183" "0.0183" "0" "602"   "642"  "602"         
[104,] "74G"  "0.0224" "0.0224" "0" "936"   "996"  "936"         
[105,] "78"   "0.0141" "0.0141" "0" "497"   "510"  "497"         
[106,] "79"   "0.0228" "0.0228" "0" "659"   "677"  "659"         
[107,] "91"   "0.02"   "0.02"   "0" "651"   "710"  "651"         
[108,] "93A"  "0.03"   "0.03"   "0" "733"   "780"  "733"         
[109,] "94"   "0.0271" "0.0271" "0" "1367"  "1388" "1367"        
[110,] "95"   "0.0277" "0.0277" "0" "686"   "695"  "686"         
[111,] "95A"  "0.0341" "0.0341" "0" "352"   "361"  "352"         
[112,] "97"   "0.0145" "0.0145" "0" "825"   "871"  "825"         
[113,] "104"  "0.041"  "0.041"  "0" "415"   "423"  "415"         
[114,] "104B" "0.0337" "0.0337" "0" "1393"  "1462" "1393"        
[115,] "104C" "0.0213" "0.0213" "0" "47"    "40"   "47"          
[116,] "108B" "0.0323" "0.0323" "0" "62"    "61"   "62"          
[117,] "113"  "0.029"  "0.029"  "0" "1034"  "1065" "1034"        
[118,] "114A" "0.0091" "0.0091" "0" "110"   "132"  "110"         
[119,] "114C" "0"      "0"      "0" "4"     "6"    "4"           
[120,] "114D" "0"      "0"      "0" "7"     "7"    "7"           
[121,] "115"  "0.0188" "0.0188" "0" "532"   "577"  "532"         
[122,] "117"  "0.0291" "0.0291" "0" "997"   "1046" "997"         
[123,] "117A" "0.0326" "0.0326" "0" "1198"  "1268" "1198"        
[124,] "128B" "0.0208" "0.0208" "0" "624"   "654"  "624"         
[125,] "128C" "0.0144" "0.0144" "0" "971"   "1035" "971"         
[126,] "135"  "0.0281" "0.0281" "0" "356"   "364"  "356"         
[127,] "135B" "0.0069" "0.0069" "0" "1014"  "1053" "1014"        
[128,] "135C" "0.0638" "0.0638" "0" "47"    "48"   "47"          
[129,] "137"  "0.0219" "0.0219" "0" "868"   "894"  "868"         
[130,] "143"  "0.0833" "0.0833" "0" "24"    "24"   "24"          
[131,] "144"  "0.0214" "0.0214" "0" "1075"  "1111" "1075"        
[132,] "144B" "0.036"  "0.036"  "0" "1139"  "1158" "1139"        
[133,] "144C" "0.029"  "0.029"  "0" "1518"  "1449" "1518"        
[134,] "144D" "0.0221" "0.0221" "0" "1587"  "1580" "1587"        
[135,] "144E" "0.0461" "0.0461" "0" "1194"  "1170" "1194"        
[136,] "144F" "0"      "0"      "0" "3"     "9"    "3"           
[137,] "148F" "0.0278" "0.0278" "0" "252"   "269"  "252"         
[138,] "159"  "0.0264" "0.0264" "0" "1249"  "1311" "1249"        
[139,] "159A" "0.0192" "0.0192" "0" "1251"  "1305" "1251"        
[140,] "159D" "0.0095" "0.0095" "0" "211"   "217"  "211"         
[141,] "159E" "0.0209" "0.0209" "0" "1242"  "1290" "1242"        
[142,] "159F" "0.0176" "0.0176" "0" "1080"  "1121" "1080"        
[143,] "159G" "0.0597" "0.0597" "0" "67"    "70"   "67"          
[144,] "159H" "0.2"    "0.2"    "0" "15"    "19"   "15"          
[145,] "159J" "0.0249" "0.0249" "0" "764"   "811"  "764"         
[146,] "159K" "0.0237" "0.0237" "0" "970"   "1025" "970"         
[147,] "159L" "0.0245" "0.0245" "0" "899"   "942"  "899"         
[148,] "159P" "0.0094" "0.0094" "0" "636"   "675"  "636"         
[149,] "159Q" "0.0171" "0.0171" "0" "817"   "850"  "817"         
       pbc.pres.total useme.us16
  [1,] "1057"         "1"       
  [2,] "965"          "1"       
  [3,] "1036"         "1"       
  [4,] "1027"         "1"       
  [5,] "1511"         "1"       
  [6,] "1420"         "1"       
  [7,] "534"          "1"       
  [8,] "581"          "1"       
  [9,] "1203"         "1"       
 [10,] "813"          "1"       
 [11,] "826"          "1"       
 [12,] "1115"         "1"       
 [13,] "567"          "1"       
 [14,] "1174"         "1"       
 [15,] "651"          "1"       
 [16,] "562"          "1"       
 [17,] "1211"         "1"       
 [18,] "1644"         "1"       
 [19,] "619"          "1"       
 [20,] "1010"         "1"       
 [21,] "483"          "1"       
 [22,] "1334"         "1"       
 [23,] "556"          "1"       
 [24,] "1306"         "1"       
 [25,] "383"          "1"       
 [26,] "1516"         "1"       
 [27,] "1097"         "1"       
 [28,] "1187"         "1"       
 [29,] "203"          "1"       
 [30,] "134"          "1"       
 [31,] "296"          "1"       
 [32,] "50"           "1"       
 [33,] "950"          "1"       
 [34,] "1445"         "1"       
 [35,] "949"          "1"       
 [36,] "485"          "1"       
 [37,] "183"          "1"       
 [38,] "1188"         "1"       
 [39,] "1159"         "1"       
 [40,] "1357"         "1"       
 [41,] "1654"         "1"       
 [42,] "316"          "1"       
 [43,] "1334"         "1"       
 [44,] "1594"         "1"       
 [45,] "1286"         "1"       
 [46,] "497"          "1"       
 [47,] "477"          "1"       
 [48,] "66"           "1"       
 [49,] "776"          "1"       
 [50,] "578"          "1"       
 [51,] "1325"         "1"       
 [52,] "475"          "1"       
 [53,] "547"          "1"       
 [54,] "561"          "1"       
 [55,] "949"          "1"       
 [56,] "1296"         "1"       
 [57,] "946"          "1"       
 [58,] "783"          "1"       
 [59,] "702"          "1"       
 [60,] "858"          "1"       
 [61,] "53"           "1"       
 [62,] "844"          "1"       
 [63,] "922"          "1"       
 [64,] "1334"         "1"       
 [65,] "1163"         "1"       
 [66,] "598"          "1"       
 [67,] "2"            "1"       
 [68,] "1246"         "1"       
 [69,] "1081"         "1"       
 [70,] "573"          "1"       
 [71,] "2"            "1"       
 [72,] "460"          "1"       
 [73,] "1526"         "1"       
 [74,] "739"          "1"       
 [75,] "1583"         "1"       
 [76,] "907"          "1"       
 [77,] "1162"         "1"       
 [78,] "1220"         "1"       
 [79,] "743"          "1"       
 [80,] "75"           "1"       
 [81,] "67"           "1"       
 [82,] "312"          "1"       
 [83,] "1063"         "1"       
 [84,] "1429"         "1"       
 [85,] "926"          "1"       
 [86,] "1368"         "1"       
 [87,] "1102"         "1"       
 [88,] "619"          "1"       
 [89,] "1250"         "1"       
 [90,] "415"          "1"       
 [91,] "590"          "1"       
 [92,] "711"          "1"       
 [93,] "391"          "1"       
 [94,] "18"           "1"       
 [95,] "529"          "1"       
 [96,] "183"          "1"       
 [97,] "129"          "1"       
 [98,] "1630"         "1"       
 [99,] "17"           "1"       
[100,] "1323"         "1"       
[101,] "869"          "1"       
[102,] "946"          "1"       
[103,] "642"          "1"       
[104,] "996"          "1"       
[105,] "510"          "1"       
[106,] "677"          "1"       
[107,] "710"          "1"       
[108,] "780"          "1"       
[109,] "1388"         "1"       
[110,] "695"          "1"       
[111,] "361"          "1"       
[112,] "871"          "1"       
[113,] "423"          "1"       
[114,] "1462"         "1"       
[115,] "40"           "1"       
[116,] "61"           "1"       
[117,] "1065"         "1"       
[118,] "132"          "1"       
[119,] "6"            "1"       
[120,] "7"            "1"       
[121,] "577"          "1"       
[122,] "1046"         "1"       
[123,] "1268"         "1"       
[124,] "654"          "1"       
[125,] "1035"         "1"       
[126,] "364"          "1"       
[127,] "1053"         "1"       
[128,] "48"           "1"       
[129,] "894"          "1"       
[130,] "24"           "1"       
[131,] "1111"         "1"       
[132,] "1158"         "1"       
[133,] "1449"         "1"       
[134,] "1580"         "1"       
[135,] "1170"         "1"       
[136,] "9"            "1"       
[137,] "269"          "1"       
[138,] "1311"         "1"       
[139,] "1305"         "1"       
[140,] "217"          "1"       
[141,] "1290"         "1"       
[142,] "1121"         "1"       
[143,] "70"           "1"       
[144,] "19"           "1"       
[145,] "811"          "1"       
[146,] "1025"         "1"       
[147,] "942"          "1"       
[148,] "675"          "1"       
[149,] "850"          "1"       

> pbc <- as.data.frame(list(precinct = pbc.pres$precinct, 
    pbuch = pbuch, ptotal = ptotal, pdeckard = pdeckard, pnelson = pnelson, 
    stotal = stotal, plowe = plowe, sstotal = sstotal, pmcguire = pmcguire, 
    shtotal = shtotal, useme.ss35 = useme.ss35, useme.us16 = useme.us16))

> pbc.complete <- cbind(pbc.pres, pbc.senate[, -1], 
    pbc.ss35[, -1], pbc.us16[, -1], useme.ss35, useme.us16, pbc.pres.total)

> fit1 <- glm(buchananm ~ nelson + deckard, data = pbc.complete[useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit1))

Call:
glm(formula = buchananm ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.ss35 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.1424  -1.3943  -0.3857   0.6849   5.7703  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9526     0.2647 -26.263   <2e-16 ***
nelson        3.3220     0.3496   9.503   <2e-16 ***
deckard       6.1608    17.4382   0.353    0.724    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 374.96  on 104  degrees of freedom
Residual deviance: 280.08  on 102  degrees of freedom
AIC: 6550.5

Number of Fisher Scoring iterations: 4


> print(summary(glm(pbuch ~ pnelson + pdeckard, data = pbc[pbc$useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = ptotal)))

Call:
glm(formula = pbuch ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.ss35 == 1, ], weights = ptotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.1424  -1.3943  -0.3857   0.6849   5.7703  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9526     0.2647 -26.263   <2e-16 ***
pnelson       3.3220     0.3496   9.503   <2e-16 ***
pdeckard      6.1608    17.4382   0.353    0.724    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 374.96  on 104  degrees of freedom
Residual deviance: 280.08  on 102  degrees of freedom
AIC: 6550.5

Number of Fisher Scoring iterations: 4


> fit2 <- glm(lowe ~ nelson + deckard, data = pbc.complete[useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit2))

Call:
glm(formula = lowe ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.ss35 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-5.2577  -0.9685  -0.1429   1.0635   4.8310  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -2.1204     0.1098 -19.307  < 2e-16 ***
nelson       -1.6471     0.1699  -9.695  < 2e-16 ***
deckard      19.4051     5.0074   3.875 0.000107 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 419.41  on 104  degrees of freedom
Residual deviance: 294.38  on 102  degrees of freedom
AIC: 24495

Number of Fisher Scoring iterations: 3


> print(summary(glm(plowe ~ pnelson + pdeckard, data = pbc[pbc$useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = sstotal)))

Call:
glm(formula = plowe ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.ss35 == 1, ], weights = sstotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-5.1029  -0.9595  -0.1413   1.0574   4.8281  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -2.1067     0.1106 -19.047  < 2e-16 ***
pnelson      -1.6704     0.1705  -9.796  < 2e-16 ***
pdeckard     19.2966     5.0217   3.843 0.000122 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 417.95  on 104  degrees of freedom
Residual deviance: 290.75  on 102  degrees of freedom
AIC: 24061

Number of Fisher Scoring iterations: 3


> fit3 <- glm(buchananm ~ nelson + deckard, data = pbc.complete[useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit3))

Call:
glm(formula = buchananm ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.us16 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7669  -1.0725  -0.3245   0.6811   5.6474  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9398     0.1843 -37.653   <2e-16 ***
nelson        3.3678     0.2692  12.511   <2e-16 ***
deckard       4.7514    12.0497   0.394    0.693    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 455.55  on 148  degrees of freedom
Residual deviance: 306.85  on 146  degrees of freedom
AIC: 10229

Number of Fisher Scoring iterations: 4


> print(summary(glm(pbuch ~ pnelson + pdeckard, data = pbc[pbc$useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = ptotal)))

Call:
glm(formula = pbuch ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.us16 == 1, ], weights = ptotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7669  -1.0725  -0.3245   0.6811   5.6474  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9398     0.1843 -37.653   <2e-16 ***
pnelson       3.3678     0.2692  12.511   <2e-16 ***
pdeckard      4.7514    12.0497   0.394    0.693    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 455.55  on 148  degrees of freedom
Residual deviance: 306.85  on 146  degrees of freedom
AIC: 10229

Number of Fisher Scoring iterations: 4


> fit4 <- glm(mcguire ~ nelson + deckard, data = pbc.complete[useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit4))

Call:
glm(formula = mcguire ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.us16 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7324  -1.3050  -0.3016   0.8905   5.0718  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -3.3420     0.1109 -30.132  < 2e-16 ***
nelson       -0.9988     0.1891  -5.283 1.27e-07 ***
deckard      26.1383     3.4097   7.666 1.78e-14 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 491.68  on 148  degrees of freedom
Residual deviance: 414.91  on 146  degrees of freedom
AIC: 24737

Number of Fisher Scoring iterations: 3


> print(summary(glm(pmcguire ~ pnelson + pdeckard, data = pbc[pbc$useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = shtotal)))

Call:
glm(formula = pmcguire ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.us16 == 1, ], weights = shtotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.6563  -1.2957  -0.2921   0.8685   5.1082  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -3.3418     0.1136 -29.412  < 2e-16 ***
pnelson      -0.9900     0.1937  -5.112 3.18e-07 ***
pdeckard     25.5344     3.4069   7.495 6.63e-14 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 469.50  on 148  degrees of freedom
Residual deviance: 396.87  on 146  degrees of freedom
AIC: 23724

Number of Fisher Scoring iterations: 3

> vote <- pbc
> 
> indx <- as.logical(vote$useme.ss35)
> str.dep         <- "pbuch"
> outname         <- "ss35.buch"
> initial.parms   <- c(-5.677547e+00,1.943731e+00,-5.453711e+01) ## from round3/v1 (pop 1500)
> initial.domains <- NULL
> 
> #run specific variables
> pop.size         <- 100;
> wait.generations <- 1;
> gradient.check   <- F;
> max.generations  <- wait.generations*10;
> 
> str.pop   <- "ptotal"
> str.indep <- c("pnelson","pdeckard")
> statename <- "PBC"
> 
> ## where we are going to store things...
> ps.flag <- T
> ps.dir  <- paste("postscript.lqd8.",str.dep,sep="");
> project <- paste("genoud.pro.lqd8.",str.dep,".ps",pop.size,".wg",wait.generations,".",sep="");
> project <- paste(project,system("date | sed 's/ //g'",T),sep="");
> ## ... and create the postscript directory if it does not exist.
> if ( ! file.exists(ps.dir) )
+   dir.create(ps.dir)
> 
> ## loop over regions/states/samples
> tmp.str.indep <- str.indep
> tmp.out <- 
+   lqd(mydata=vote[indx,],
+       nparms = 3,
+       str.pop,
+       str.dep,
+       tmp.str.indep,
+       sample.name     = statename ,
+       pop.size        = pop.size,
+       wait.generations= wait.generations,
+       max.generations = max.generations,
+       gradient.check  = gradient.check,
+       project   = project,
+       outlier.threshold = 2.5,
+       flag.print= T,
+       ps.dir    = ps.dir ,
+       ps.flag   = T,
+       pstart   = initial.parms,
+       mdomains = initial.domains 
+       )
[1] "mydata$pnelson"
[1] "mydata$pdeckard"

Call:
glm(formula = data.dep ~ -1 + data.indep, family = binomial(link = "logit"), 
    weights = data.pop)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.1424  -1.3943  -0.3857   0.6849   5.7703  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
data.indep1  -6.9526     0.2647 -26.263   <2e-16 ***
data.indep2   3.3220     0.3496   9.503   <2e-16 ***
data.indep3   6.1608    17.4382   0.353    0.724    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 87669.50  on 105  degrees of freedom
Residual deviance:   280.08  on 102  degrees of freedom
AIC: 6550.5

Number of Fisher Scoring iterations: 4



Sat Feb 10 14:15:15 2001
Domains:
 -1.000000e+02   <=  X1   <=    1.000000e+02 
 -1.000000e+02   <=  X2   <=    1.000000e+02 
 -1.000000e+02   <=  X3   <=    1.000000e+02 

Data Type: Floating Point
Operators (code number, name, population) 
	(0) Cloning........................... 	15
	(1) Uniform Mutation.................. 	12
	(2) Boundary Mutation................. 	12
	(3) Non-Uniform Mutation.............. 	12
	(4) Polytope Crossover................ 	12
	(5) Multiple Point Simple Crossover... 	12
	(6) Whole Non-Uniform Mutation........ 	12
	(7) Heuristic Crossover............... 	12
	(8) Local-Minimum Crossover........... 	0

SOFT Maximum Number of Generations: 10
Maximum Nonchanging Generations: 1
Population size       : 100
Convergence Tolerance: 1.000000e-03

Using the BFGS Derivative Based Optimizer on the Best Individual Each Generation.
Not Checking Gradients before Stoping
Not Using Out of Bounds Individuals and Not Allowing Trespassing.



Minimization Problem.

Parameter B (hardcoded): 6
Parameter Q (hardcoded): 0.500000


STARTING VALUES


The 2 best initial individuals are
-5.68	 1.94	-54.54	
fitness = 5.664213e-01

-28.06	34.36	72.22	
fitness = 5.403248e+00


The worst fit of the population is: nan




Generation#	    Solution Value

      0 	5.664213e-01
GENERATION: 0 (initializing the population)
Fitness Value... 5.664213e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 1
#unique......... 100, #Total UniqueCount: 100
tobs............ 99
var 1:
best............ -5.677547e+00
mean............ 9.230284e+00
var............. 3.605059e+03
skewness........ -1.363441e-01
kurtosis........ 1.722570e+00
#null........... 0
tobs............ 100
var 2:
best............ 1.943731e+00
mean............ 1.437745e+00
var............. 3.230898e+03
skewness........ -2.020035e-02
kurtosis........ 1.973079e+00
#null........... 0
tobs............ 100
var 3:
best............ -5.453711e+01
mean............ -8.013173e-01
var............. 3.023370e+03
skewness........ 5.416308e-03
kurtosis........ 1.877906e+00
#null........... 0
tobs............ 100
      1 	5.664212e-01

GENERATION: 1
Fitness Value... 5.664212e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 0
#unique......... 58, #Total UniqueCount: 158
tobs............ 100
var 1:
best............ -5.677547e+00
mean............ -1.346152e+01
var............. 5.757983e+02
skewness........ -3.899598e-01
kurtosis........ 4.762387e+00
#null........... 0
tobs............ 100
var 2:
best............ 1.943731e+00
mean............ 1.277246e+01
var............. 1.172082e+03
skewness........ -8.335142e-02
kurtosis........ 4.049644e+00
#null........... 0
tobs............ 100
var 3:
best............ -5.453711e+01
mean............ -4.035558e+00
var............. 3.956352e+03
skewness........ 2.508101e-01
kurtosis........ 1.538249e+00
#null........... 0
tobs............ 100
      2 	5.664211e-01

GENERATION: 2
Fitness Value... 5.664211e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 0
#unique......... 65, #Total UniqueCount: 223
tobs............ 100
var 1:
best............ -5.677547e+00
mean............ -4.050756e+00
var............. 2.043314e+02
skewness........ 1.435275e+00
kurtosis........ 1.679310e+01
#null........... 0
tobs............ 100
var 2:
best............ 1.943731e+00
mean............ 3.555538e+00
var............. 3.810320e+02
skewness........ 2.861794e-01
kurtosis........ 1.642201e+01
#null........... 0
tobs............ 100
var 3:
best............ -5.453711e+01
mean............ -5.204107e+01
var............. 2.153723e+02
skewness........ 5.519273e+00
kurtosis........ 3.676734e+01
#null........... 0
tobs............ 100

Soft Generation Wait Limit Hit.
No Improvement in 1 Generations

Best Fit Found at Generation 2
Fit Value = 5.664211e-01


Parameters at the Solution (value, gradient):

 X[ 1] :	-5.677547e+00	G[ 1] :	-7.630967e-01
 X[ 2] :	1.943731e+00	G[ 2] :	-7.366281e-01
 X[ 3] :	-5.453711e+01	G[ 3] :	0.000000e+00

Solution Found Generation 2
Number of Generations Run 2


Sat Feb 10 14:15:30 2001
Total run time : 0 hours 0 minutes and 15 seconds
[1] "Saving GLM and RGENOUD Results"
expression(glm.PBC <<- glm1)
expression(gen.PBC.100 <<- gen3)
[1] "residuals$raw.res"
  [1] -0.08755578  1.35436034  1.05098702  1.76457358 -0.63267896  1.77378976
  [7] -0.57239128 -0.78397038 -0.84745925 -0.35730670 -1.76570057  0.91999411
 [13] -0.83204177 -0.30057602  1.54468310 -0.54388661  0.20421583 -0.42730203
 [19] -2.12653923  1.28771281  1.03910186 -0.76879886 -1.26106863  2.36308832
 [25] -1.16147313 -2.11044254 -1.94651113 -0.08272777 -0.85841526 -1.43709517
 [31] -0.72379792 -2.19778292 -0.22903204 -1.95086446 -2.15875357 -2.25362117
 [37] -1.18023113 -1.13535685  1.69111191 -0.96449712 -1.46166082 -1.21096802
 [43]  1.19958190  3.41518328 -1.94841338 -1.70177651 -0.35797649 -0.64525744
 [49] -2.26778245 -1.37458407 -0.27015521 -1.19802935 -2.32440383 -2.01924925
 [55] -0.51362009 -0.84082782 -0.44436207 -1.26009143 -1.94223351 -0.44768571
 [61] -2.49628690  3.12662084  1.34161800 -1.21165953  0.04608996 -0.01306184
 [67]  2.51144965 -0.70622510 -0.83202062  1.89390707 -0.13448977 -2.67531529
 [73] -0.63219687 -2.82587963 -0.34545694  0.11596256  0.03909003 -0.99680747
 [79] -1.87224113 -0.68952832 -0.28116058 -1.17099384  1.44074914 -0.75491282
 [85] -0.36212917 -0.02082198 -1.76347242 -1.57020771  0.39114970 -1.13881243
 [91] -0.21398203 -0.34448402 -2.43567162  6.14447861  6.54258244 -1.32621905
 [97] -0.16021042 -0.13806050  5.86124109  1.88256190  0.01299291 -0.41632847
[103] -2.28595114 -0.92372785 -1.73486500
median: -0.632679 
[1] "residuals$res"
  [1]  0.5451231771  1.9870393018  1.6836659790  2.3972525392  0.0000000000
  [6]  2.4064687146  0.0602876728 -0.1512914216 -0.2147802898  0.2753722575
 [11] -1.1330216159  1.5526730671 -0.1993628156  0.3321029381  2.1773620547
 [16]  0.0887923441  0.8368947825  0.2053769261 -1.4938602775  1.9203917626
 [21]  1.6717808135 -0.1361198997 -0.6283896768  2.9957672787 -0.5287941736
 [26] -1.4777635802 -1.3138321767  0.5499511829 -0.2257363056 -0.8044162158
 [31] -0.0911189584 -1.5651039589  0.4036469140 -1.3181854994 -1.5260746153
 [36] -1.6209422120 -0.5475521708 -0.5026778957  2.3237908669 -0.3318181646
 [41] -0.8289818672 -0.5782890599  1.8322608561  4.0478622383 -1.3157344268
 [46] -1.0690975535  0.2747024644 -0.0125784777 -1.6351034930 -0.7419051092
 [51]  0.3625237432 -0.5653503950 -1.6917248738 -1.3865702921  0.1190588670
 [56] -0.2081488673  0.1883168878 -0.6274124766 -1.3095545539  0.1849932483
 [61] -1.8636079468  3.7592997975  1.9742969606 -0.5789805774  0.6787689134
 [66]  0.6196171190  3.1441286070 -0.0735461429 -0.1993416590  2.5265860294
 [71]  0.4981891861 -2.0426363297  0.0004820863 -2.1932006753  0.2872220132
 [76]  0.7486415202  0.6717689846 -0.3641285156 -1.2395621693 -0.0568493593
 [81]  0.3515183784 -0.5383148782  2.0734280981 -0.1222338618  0.2705497840
 [86]  0.6118569763 -1.1307934612 -0.9375287528  1.0238286539 -0.5061334758
 [91]  0.4186969261  0.2881949374 -1.8029926651  6.7771575716  7.1752613936
 [96] -0.6935400936  0.4724685419  0.4946184606  6.4939200450  2.5152408558
[101]  0.6456718702  0.2163504868 -1.6532721822 -0.2910488894 -1.1021860476
[1] "s0: 1.25697035745293"
sigma:  1.188885 
[1] "data: student, pred, dep"
                                      data.dep
  [1,]  0.4585162538 1.036693e-02 0.0101095198
  [2,]  1.6713466881 6.906097e-03 0.0147783251
  [3,]  1.4161720683 9.645979e-03 0.0126262626
  [4,]  2.0163869373 1.057539e-02 0.0154753132
  [5,]  0.0000000000 8.699825e-03 0.0072551391
  [6,]  2.0241388847 1.150894e-02 0.0221518987
  [7,]  0.0507094159 7.391141e-03 0.0000000000
  [8,] -0.1272548642 1.551472e-02 0.0000000000
  [9,] -0.1806568827 1.146573e-02 0.0089955022
 [10,]  0.2316222483 1.031450e-02 0.0094102886
 [11,] -0.9530118119 9.422538e-03 0.0046656299
 [12,]  1.3059907703 1.508981e-02 0.0201207243
 [13,] -0.1676888733 1.513310e-02 0.0104821803
 [14,]  0.2793397922 2.037914e-02 0.0151515152
 [15,]  1.8314317465 1.726223e-02 0.0244845361
 [16,]  0.0746853825 1.293706e-02 0.0103806228
 [17,]  0.7039323891 1.738005e-02 0.0181132075
 [18,]  0.1727474866 4.813729e-03 0.0035650624
 [19,] -1.2565219143 1.160951e-02 0.0042149631
 [20,]  1.6152878352 1.427537e-02 0.0185185185
 [21,]  1.4061751689 6.747904e-03 0.0095137421
 [22,] -0.1144937311 1.766809e-02 0.0140485313
 [23,] -0.5285537152 7.115043e-03 0.0034965035
 [24,]  2.5198121220 1.594460e-02 0.0566037736
 [25,] -0.4447815350 1.134269e-02 0.0071090047
 [26,] -1.2429825940 1.342060e-02 0.0054229935
 [27,] -1.1050959361 1.074096e-02 0.0052473763
 [28,]  0.4625772058 3.410273e-03 0.0000000000
 [29,] -0.1898722518 8.675833e-03 0.0064205457
 [30,] -0.6766138833 7.461851e-03 0.0037002775
 [31,] -0.0766423539 3.624892e-03 0.0000000000
 [32,] -1.3164466933 1.795482e-02 0.0043478261
 [33,]  0.3395171561 7.492428e-03 0.0067658999
 [34,] -1.1087576208 7.345495e-03 0.0031585597
 [35,] -1.2836181709 7.136119e-03 0.0011025358
 [36,] -1.3634135949 7.379388e-03 0.0017211704
 [37,] -0.4605593390 1.228916e-02 0.0040322581
 [38,] -0.4228145037 1.269074e-02 0.0043290043
 [39,]  1.9545965527 9.651701e-03 0.0298507463
 [40,] -0.2791002624 8.804485e-03 0.0054719562
 [41,] -0.6972766452 1.870155e-02 0.0069930070
 [42,] -0.4864128778 1.625163e-02 0.0071174377
 [43,]  1.5411588039 1.511823e-02 0.0210016155
 [44,]  3.4047545712 1.533149e-02 0.0272000000
 [45,] -1.1066959645 9.064824e-03 0.0000000000
 [46,] -0.8992437410 7.895790e-03 0.0016949153
 [47,]  0.2310588692 7.945561e-03 0.0000000000
 [48,] -0.0105800610 8.780876e-03 0.0000000000
 [49,] -1.3753249900 1.064455e-02 0.0000000000
 [50,] -0.6240342836 6.802936e-03 0.0018903592
 [51,]  0.3049274652 1.361155e-02 0.0104166667
 [52,] -0.4755298546 7.781995e-03 0.0000000000
 [53,] -1.4229505992 1.153463e-02 0.0000000000
 [54,] -1.1662777195 9.024148e-03 0.0042944785
 [55,]  0.1001432850 1.528085e-02 0.0000000000
 [56,] -0.1750790332 6.977191e-03 0.0046029919
 [57,]  0.1583978769 1.298198e-02 0.0109890110
 [58,] -0.5277317686 1.678684e-02 0.0000000000
 [59,] -1.1014979243 7.217479e-03 0.0020080321
 [60,]  0.1556022836 1.150249e-02 0.0089020772
 [61,] -1.5675255980 1.346128e-02 0.0016778523
 [62,]  3.1620377415 7.591084e-03 0.0196078431
 [63,]  1.6606287975 8.547314e-03 0.0132939439
 [64,] -0.4869945298 8.463335e-03 0.0000000000
 [65,]  0.5709289063 8.452622e-03 0.0088495575
 [66,]  0.5211749052 1.895649e-05 0.0000000000
 [67,]  2.6446024140 8.178371e-03 0.0218181818
 [68,] -0.0618614348 1.028385e-02 0.0000000000
 [69,] -0.1676710779 1.017607e-02 0.0070422535
 [70,]  2.1251724557 7.513737e-03 0.0139534884
 [71,]  0.4190389418 8.962693e-03 0.0000000000
 [72,] -1.7181106894 7.247588e-03 0.0008058018
 [73,]  0.0004054944 5.523895e-03 0.0038461538
 [74,] -1.8447539924 6.902202e-03 0.0007022472
 [75,]  0.2415893637 9.547217e-03 0.0086455331
 [76,]  0.6297004414 8.235558e-03 0.0086330935
 [77,]  0.5650410973 8.125549e-03 0.0083102493
 [78,] -0.3062772779 8.942961e-03 0.0044943820
 [79,] -1.0426256413 1.232064e-02 0.0000000000
 [80,] -0.0478173674 6.464895e-03 0.0045924225
 [81,]  0.2956705874 8.110150e-03 0.0061349693
 [82,] -0.4527896293 8.173441e-03 0.0042194093
 [83,]  1.7440103886 5.053488e-03 0.0134228188
 [84,] -0.1028138497 8.560827e-03 0.0000000000
 [85,]  0.2275659495 3.267725e-03 0.0000000000
 [86,]  0.5146476620 7.718140e-03 0.0076530612
 [87,] -0.9511376572 8.829942e-03 0.0027322404
 [88,] -0.7885780491 9.082376e-03 0.0000000000
 [89,]  0.8611669776 1.113761e-02 0.0163934426
 [90,] -0.4257210755 9.515211e-03 0.0000000000
 [91,]  0.3521760844 6.498678e-03 0.0000000000
 [92,]  0.2424077137 8.405129e-03 0.0000000000
 [93,] -1.5165406224 1.336873e-02 0.0047483381
 [94,]  5.7004307121 9.327924e-03 0.0290827740
 [95,]  6.0352854399 9.312408e-04 0.0416666667
 [96,] -0.5833533023 9.199156e-03 0.0054005401
 [97,]  0.3974046875 9.509971e-03 0.0089887640
 [98,]  0.4160355184 9.019136e-03 0.0086355786
 [99,]  5.4621927963 9.730226e-03 0.0248447205
[100,]  2.1156297565 8.854358e-03 0.0132911392
[101,]  0.5430901849 8.512113e-03 0.0085470085
[102,]  0.1819776132 1.889493e-02 0.0000000000
[103,] -1.3906071127 7.865502e-03 0.0022883295
[104,] -0.2448082415 7.782527e-03 0.0049321825
[105,] -0.9270752716 9.027816e-03 0.0039024390
> 
> hist(tmp.out$student)
> eval(parse(text=paste(outname,".",pop.size,".",wait.generations,"<- tmp.out",sep="")))
> proc.time()
[1] 17.25  0.82 18.12  0.00  0.02
> 
