
R : Copyright 2001, The R Development Core Team
Version 1.2.1  (2001-01-15)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type `license()' or `licence()' for distribution details.

R is a collaborative project with many contributors.
Type `contributors()' for more information.

Type `demo()' for some demos, `help()' for on-line help, or
`help.start()' for a HTML browser interface to help.
Type `q()' to quit R.

[Previously saved workspace restored]

> invisible(options(echo = TRUE))
> options(warn=1)
> source("../rgenoud.R");
> source("../function.lqd8.R",echo=T,max.deparse.length = 1000)

> lqd <- function(mydata, nparms = 3, str.pop, str.dep, 
    str.indep, sample.name, pop.size, wait.generations, max.generations = 20, 
    gradient.check, project, outlier.threshold = 2.5, flag.print = T, 
    ps.dir = "postscript", ps.flag = T, pstart = NULL, mdomains = NULL) {
    obs <- dim(mydata)[1]
    h <- ceiling((obs + nparms)/2)
    diflen <- (obs * (obs - 1))/2
    hidx <- (h * (h - 1))/2
    data.pop <- eval(parse(text = paste("mydata$", str.pop, sep = "")))
    data.dep <- eval(parse(text = paste("mydata$", str.dep, sep = "")))
    data.indep <- matrix(NA, obs, length(str.indep) + 1)
    data.indep[, 1] <- 1
    for (i in 1:length(str.indep)) {
        statement <- paste("mydata$", str.indep[i], sep = "")
        print(statement)
        tmp <- eval(parse(text = statement))
        data.indep[, i + 1] <- tmp
    }
    fit.lqd1 <- function(foo) {
        mu <- c(data.indep %*% foo)
        y <- 1/(1 + exp(-1 * mu))
        rawres <- (data.pop * (data.dep - y))/(sqrt(data.pop .... [TRUNCATED] 
> library("KernSmooth");
KernSmooth 2.22 installed
Copyright M. P. Wand 1997
> 
> source("../data.pbc.R",echo=T,max.deparse.length = 1000) ## MySQL retrieves data

> pbc.pres <- read.table(file = "../2000pres.parsed.txt", 
    header = T, as.is = T)

> pbc.pres <- pbc.pres[, -1]

> ptotal <- pbc.pres$bushm + pbc.pres$gorem + pbc.pres$brownem + 
    pbc.pres$naderm + pbc.pres$harrism + pbc.pres$hagelinm + 
    pbc.pres$buchananm + pbc.pres$mcreynoldsm + pbc.pres$phillipsm + 
    pbc.pres$mooreheadm

> pbuch <- pbc.pres$buchananm/ptotal

> pbc.pres.total <- pbc.pres$bushm + pbc.pres$gorem + 
    pbc.pres$brownem + pbc.pres$naderm + pbc.pres$harrism + pbc.pres$hagelinm + 
    pbc.pres$buchananm + pbc.pres$mcreynoldsm + pbc.pres$phillipsm + 
    pbc.pres$mooreheadm

> pbc.pres[, -1] <- pbc.pres[, -1]/pbc.pres.total

> useme.ss35 <- rep(0, times = length(pbc.pres.total))

> useme.us16 <- rep(0, times = length(pbc.pres.total))

> pbc.senate <- read.table(file = "../2000senate.parsed.txt", 
    header = T, as.is = T)

> stotal <- pbc.senate$mccollum + pbc.senate$nelson + 
    pbc.senate$simonetta + pbc.senate$deckard + pbc.senate$logan + 
    pbc.senate$martin + pbc.senate$mccormick + pbc.senate$writein

> pdeckard <- pbc.senate$deckard/stotal

> pnelson <- pbc.senate$nelson/stotal

> pbc.senate.total <- pbc.senate$mccollum + pbc.senate$nelson + 
    pbc.senate$simonetta + pbc.senate$deckard + pbc.senate$logan + 
    pbc.senate$martin + pbc.senate$mccormick + pbc.senate$writein

> pbc.senate[, -1] <- pbc.senate[, -1]/pbc.senate.total

> pbc.ss35 <- read.table(file = "../pbc.statesenate35.all.txt", 
    header = T, as.is = T)

> useme.ss35[as.logical(pbc.ss35$vaughan > -99)] <- 1

> sstotal <- pbc.ss35$vaughan + pbc.ss35$rossin + pbc.ss35$lowe

> plowe <- pbc.ss35$lowe/sstotal

> pbc.ss35.total <- pbc.ss35$vaughan + pbc.ss35$rossin + 
    pbc.ss35$lowe

> pbc.ss35[, -1] <- pbc.ss35[, -1]/pbc.ss35.total

> pbc.us16 <- read.table(file = "../pbc.ushouse16.all.txt", 
    header = T, as.is = T)

> useme.us16[as.logical(pbc.us16$foley > -99)] <- 1

> shtotal <- pbc.us16$foley + pbc.us16$brown + pbc.us16$mcguire + 
    pbc.us16$writein

> pmcguire <- pbc.us16$mcguire/shtotal

> pbc.us16.total <- pbc.us16$foley + pbc.us16$brown + 
    pbc.us16$mcguire + pbc.us16$writein

> pbc.us16[, -1] <- pbc.us16[, -1]/pbc.us16.total

> useme.ss35[532:637] <- 0

> useme.us16[532:637] <- 0

> useme.ss35[is.na(plowe)] <- 0

> useme.us16[is.na(pmcguire)] <- 0

> print(cbind(pbc.pres$precinct[useme.ss35 == 1], round(cbind(plowe, 
    pbc.ss35$lowe, plowe - pbc.ss35$lowe, sstotal, ptotal, pbc.ss35.total, 
    pbc.pres.total, useme.ss35)[useme.ss35 == 1, ], 4)))
              plowe                 sstotal ptotal pbc.ss35.total
  [1,] "13"   "0.048"  "0.048"  "0" "1147"  "1187" "1147"        
  [2,] "13A"  "0.0441" "0.0441" "0" "204"   "203"  "204"         
  [3,] "18A"  "0.0566" "0.0566" "0" "1220"  "1188" "1220"        
  [4,] "18C"  "0.0398" "0.0398" "0" "1332"  "1357" "1332"        
  [5,] "18D"  "0.0362" "0.0362" "0" "1632"  "1654" "1632"        
  [6,] "18F"  "0.044"  "0.044"  "0" "318"   "316"  "318"         
  [7,] "18G"  "0"      "0"      "0" "41"    "44"   "41"          
  [8,] "18H"  "0.0263" "0.0263" "0" "38"    "39"   "38"          
  [9,] "18J"  "0.0338" "0.0338" "0" "1300"  "1334" "1300"        
 [10,] "19"   "0.0285" "0.0285" "0" "1614"  "1594" "1614"        
 [11,] "19A"  "0.0303" "0.0303" "0" "1253"  "1286" "1253"        
 [12,] "20"   "0.0249" "0.0249" "0" "522"   "497"  "522"         
 [13,] "21"   "0.0241" "0.0241" "0" "498"   "477"  "498"         
 [14,] "21A"  "0.0448" "0.0448" "0" "67"    "66"   "67"          
 [15,] "22"   "0.0171" "0.0171" "0" "819"   "776"  "819"         
 [16,] "23"   "0.0286" "0.0286" "0" "594"   "578"  "594"         
 [17,] "24"   "0.0179" "0.0179" "0" "1342"  "1325" "1342"        
 [18,] "26C"  "0.0461" "0.0461" "0" "542"   "561"  "542"         
 [19,] "27"   "0.0455" "0.0455" "0" "968"   "949"  "968"         
 [20,] "29"   "0.0179" "0.0179" "0" "1288"  "1296" "1288"        
 [21,] "29A"  "0.0556" "0.0556" "0" "917"   "946"  "917"         
 [22,] "29B"  "0.0307" "0.0307" "0" "783"   "783"  "783"         
 [23,] "29D"  "0.0572" "0.0572" "0" "822"   "858"  "822"         
 [24,] "29F"  "0.0909" "0.0909" "0" "55"    "53"   "55"          
 [25,] "30"   "0.0333" "0.0333" "0" "840"   "844"  "840"         
 [26,] "30A"  "0.0214" "0.0214" "0" "934"   "922"  "934"         
 [27,] "30B"  "0.0434" "0.0434" "0" "1314"  "1334" "1314"        
 [28,] "31H"  "0"      "0"      "0" "2"     "2"    "2"           
 [29,] "32"   "0.0606" "0.0606" "0" "1189"  "1246" "1189"        
 [30,] "32A"  "0.0692" "0.0692" "0" "1040"  "1081" "1040"        
 [31,] "36"   "0.0588" "0.0588" "0" "153"   "144"  "153"         
 [32,] "40"   "0.0125" "0.0125" "0" "481"   "460"  "481"         
 [33,] "41A"  "0.051"  "0.051"  "0" "726"   "739"  "726"         
 [34,] "41B"  "0.0591" "0.0591" "0" "1506"  "1583" "1506"        
 [35,] "41C"  "0.0528" "0.0528" "0" "872"   "907"  "872"         
 [36,] "41D"  "0.0644" "0.0644" "0" "1103"  "1162" "1103"        
 [37,] "44"   "0.0433" "0.0433" "0" "254"   "248"  "254"         
 [38,] "44B"  "0.0277" "0.0277" "0" "253"   "231"  "253"         
 [39,] "44C"  "0.0563" "0.0563" "0" "71"    "67"   "71"          
 [40,] "51"   "0.0273" "0.0273" "0" "768"   "731"  "768"         
 [41,] "54"   "0.0238" "0.0238" "0" "294"   "286"  "294"         
 [42,] "55"   "0.0132" "0.0132" "0" "303"   "281"  "303"         
 [43,] "60"   "0.0235" "0.0235" "0" "639"   "619"  "639"         
 [44,] "61"   "0.0287" "0.0287" "0" "1254"  "1250" "1254"        
 [45,] "61A"  "0.0096" "0.0096" "0" "418"   "415"  "418"         
 [46,] "61B"  "0.0471" "0.0471" "0" "573"   "590"  "573"         
 [47,] "61C"  "0.125"  "0.125"  "0" "16"    "16"   "16"          
 [48,] "65"   "0.0357" "0.0357" "0" "28"    "47"   "28"          
 [49,] "73A"  "0.0504" "0.0504" "0" "456"   "478"  "456"         
 [50,] "73B"  "0.0141" "0.0141" "0" "495"   "529"  "495"         
 [51,] "73C"  "0.0455" "0.0455" "0" "88"    "96"   "88"          
 [52,] "73D"  "0.0341" "0.0341" "0" "176"   "183"  "176"         
 [53,] "73E"  "0.0573" "0.0573" "0" "436"   "463"  "436"         
 [54,] "73H"  "0.0429" "0.0429" "0" "1562"  "1630" "1562"        
 [55,] "73I"  "0"      "0"      "0" "18"    "17"   "18"          
 [56,] "74B"  "0.0476" "0.0476" "0" "798"   "869"  "798"         
 [57,] "74C"  "0.0761" "0.0761" "0" "631"   "637"  "631"         
 [58,] "74D"  "0.0654" "0.0654" "0" "107"   "93"   "107"         
 [59,] "74G"  "0.0606" "0.0606" "0" "924"   "996"  "924"         
 [60,] "76"   "0.0679" "0.0679" "0" "324"   "337"  "324"         
 [61,] "76A"  "0.0495" "0.0495" "0" "586"   "596"  "586"         
 [62,] "78"   "0.0571" "0.0571" "0" "490"   "510"  "490"         
 [63,] "79"   "0.0534" "0.0534" "0" "693"   "677"  "693"         
 [64,] "83"   "0.0663" "0.0663" "0" "166"   "172"  "166"         
 [65,] "86A"  "0.0357" "0.0357" "0" "112"   "113"  "112"         
 [66,] "87"   "0"      "0"      "0" "9"     "9"    "9"           
 [67,] "87A"  "0.0295" "0.0295" "0" "271"   "275"  "271"         
 [68,] "87B"  "0.0698" "0.0698" "0" "43"    "48"   "43"          
 [69,] "91"   "0.0544" "0.0544" "0" "698"   "710"  "698"         
 [70,] "92"   "0.0444" "0.0444" "0" "631"   "645"  "631"         
 [71,] "92A"  "0"      "0"      "0" "2"     "2"    "2"           
 [72,] "93"   "0.0644" "0.0644" "0" "1181"  "1241" "1181"        
 [73,] "93A"  "0.0527" "0.0527" "0" "740"   "780"  "740"         
 [74,] "93B"  "0.0705" "0.0705" "0" "1347"  "1424" "1347"        
 [75,] "94"   "0.057"  "0.057"  "0" "1386"  "1388" "1386"        
 [76,] "95"   "0.0738" "0.0738" "0" "691"   "695"  "691"         
 [77,] "95A"  "0.0752" "0.0752" "0" "359"   "361"  "359"         
 [78,] "96"   "0.0466" "0.0466" "0" "408"   "445"  "408"         
 [79,] "96A"  "0.0444" "0.0444" "0" "270"   "281"  "270"         
 [80,] "97"   "0.0388" "0.0388" "0" "851"   "871"  "851"         
 [81,] "97A"  "0.0199" "0.0199" "0" "151"   "163"  "151"         
 [82,] "101"  "0.0405" "0.0405" "0" "692"   "711"  "692"         
 [83,] "101A" "0.0833" "0.0833" "0" "144"   "149"  "144"         
 [84,] "104A" "0.0484" "0.0484" "0" "62"    "66"   "62"          
 [85,] "104C" "0.12"   "0.12"   "0" "50"    "40"   "50"          
 [86,] "107"  "0.0306" "0.0306" "0" "752"   "784"  "752"         
 [87,] "108"  "0.0594" "0.0594" "0" "707"   "732"  "707"         
 [88,] "108A" "0.0474" "0.0474" "0" "274"   "269"  "274"         
 [89,] "108B" "0.0345" "0.0345" "0" "58"    "61"   "58"          
 [90,] "114"  "0.0288" "0.0288" "0" "139"   "135"  "139"         
 [91,] "114D" "0"      "0"      "0" "7"     "7"    "7"           
 [92,] "128K" "0.1333" "0.1333" "0" "15"    "14"   "15"          
 [93,] "135B" "0.021"  "0.021"  "0" "1048"  "1053" "1048"        
 [94,] "137"  "0.0413" "0.0413" "0" "944"   "894"  "944"         
 [95,] "143"  "0.0833" "0.0833" "0" "24"    "24"   "24"          
 [96,] "144"  "0.0323" "0.0323" "0" "1083"  "1111" "1083"        
 [97,] "144A" "0.0522" "0.0522" "0" "881"   "890"  "881"         
 [98,] "144B" "0.0485" "0.0485" "0" "1133"  "1158" "1133"        
 [99,] "144C" "0.0457" "0.0457" "0" "1555"  "1449" "1555"        
[100,] "144D" "0.0499" "0.0499" "0" "1603"  "1580" "1603"        
[101,] "144E" "0.05"   "0.05"   "0" "1199"  "1170" "1199"        
[102,] "144F" "0.1111" "0.1111" "0" "9"     "9"    "9"           
[103,] "159"  "0.0526" "0.0526" "0" "1236"  "1311" "1236"        
[104,] "159J" "0.0506" "0.0506" "0" "770"   "811"  "770"         
[105,] "159K" "0.0431" "0.0431" "0" "975"   "1025" "975"         
       pbc.pres.total useme.ss35
  [1,] "1187"         "1"       
  [2,] "203"          "1"       
  [3,] "1188"         "1"       
  [4,] "1357"         "1"       
  [5,] "1654"         "1"       
  [6,] "316"          "1"       
  [7,] "44"           "1"       
  [8,] "39"           "1"       
  [9,] "1334"         "1"       
 [10,] "1594"         "1"       
 [11,] "1286"         "1"       
 [12,] "497"          "1"       
 [13,] "477"          "1"       
 [14,] "66"           "1"       
 [15,] "776"          "1"       
 [16,] "578"          "1"       
 [17,] "1325"         "1"       
 [18,] "561"          "1"       
 [19,] "949"          "1"       
 [20,] "1296"         "1"       
 [21,] "946"          "1"       
 [22,] "783"          "1"       
 [23,] "858"          "1"       
 [24,] "53"           "1"       
 [25,] "844"          "1"       
 [26,] "922"          "1"       
 [27,] "1334"         "1"       
 [28,] "2"            "1"       
 [29,] "1246"         "1"       
 [30,] "1081"         "1"       
 [31,] "144"          "1"       
 [32,] "460"          "1"       
 [33,] "739"          "1"       
 [34,] "1583"         "1"       
 [35,] "907"          "1"       
 [36,] "1162"         "1"       
 [37,] "248"          "1"       
 [38,] "231"          "1"       
 [39,] "67"           "1"       
 [40,] "731"          "1"       
 [41,] "286"          "1"       
 [42,] "281"          "1"       
 [43,] "619"          "1"       
 [44,] "1250"         "1"       
 [45,] "415"          "1"       
 [46,] "590"          "1"       
 [47,] "16"           "1"       
 [48,] "47"           "1"       
 [49,] "478"          "1"       
 [50,] "529"          "1"       
 [51,] "96"           "1"       
 [52,] "183"          "1"       
 [53,] "463"          "1"       
 [54,] "1630"         "1"       
 [55,] "17"           "1"       
 [56,] "869"          "1"       
 [57,] "637"          "1"       
 [58,] "93"           "1"       
 [59,] "996"          "1"       
 [60,] "337"          "1"       
 [61,] "596"          "1"       
 [62,] "510"          "1"       
 [63,] "677"          "1"       
 [64,] "172"          "1"       
 [65,] "113"          "1"       
 [66,] "9"            "1"       
 [67,] "275"          "1"       
 [68,] "48"           "1"       
 [69,] "710"          "1"       
 [70,] "645"          "1"       
 [71,] "2"            "1"       
 [72,] "1241"         "1"       
 [73,] "780"          "1"       
 [74,] "1424"         "1"       
 [75,] "1388"         "1"       
 [76,] "695"          "1"       
 [77,] "361"          "1"       
 [78,] "445"          "1"       
 [79,] "281"          "1"       
 [80,] "871"          "1"       
 [81,] "163"          "1"       
 [82,] "711"          "1"       
 [83,] "149"          "1"       
 [84,] "66"           "1"       
 [85,] "40"           "1"       
 [86,] "784"          "1"       
 [87,] "732"          "1"       
 [88,] "269"          "1"       
 [89,] "61"           "1"       
 [90,] "135"          "1"       
 [91,] "7"            "1"       
 [92,] "14"           "1"       
 [93,] "1053"         "1"       
 [94,] "894"          "1"       
 [95,] "24"           "1"       
 [96,] "1111"         "1"       
 [97,] "890"          "1"       
 [98,] "1158"         "1"       
 [99,] "1449"         "1"       
[100,] "1580"         "1"       
[101,] "1170"         "1"       
[102,] "9"            "1"       
[103,] "1311"         "1"       
[104,] "811"          "1"       
[105,] "1025"         "1"       

> print(cbind(pbc.pres$precinct[useme.us16 == 1], round(cbind(pmcguire, 
    pbc.us16$mcguire, pmcguire - pbc.us16$mcguire, shtotal, ptotal, 
    pbc.us16.total, pbc.pres.total, useme.us16)[useme.us16 == 
    1, ], 4)))
              pmcguire              shtotal ptotal pbc.us16.total
  [1,] "1"    "0.021"  "0.021"  "0" "1046"  "1057" "1046"        
  [2,] "1A"   "0.0147" "0.0147" "0" "887"   "965"  "887"         
  [3,] "1B"   "0.015"  "0.015"  "0" "1001"  "1036" "1001"        
  [4,] "1C"   "0.0219" "0.0219" "0" "957"   "1027" "957"         
  [5,] "2"    "0.0145" "0.0145" "0" "1444"  "1511" "1444"        
  [6,] "3"    "0.029"  "0.029"  "0" "1378"  "1420" "1378"        
  [7,] "3A"   "0.027"  "0.027"  "0" "519"   "534"  "519"         
  [8,] "3B"   "0.0108" "0.0108" "0" "556"   "581"  "556"         
  [9,] "3C"   "0.0146" "0.0146" "0" "1162"  "1203" "1162"        
 [10,] "4"    "0.0256" "0.0256" "0" "780"   "813"  "780"         
 [11,] "4A"   "0.0271" "0.0271" "0" "776"   "826"  "776"         
 [12,] "4B"   "0.0125" "0.0125" "0" "1043"  "1115" "1043"        
 [13,] "4C"   "0.0038" "0.0038" "0" "529"   "567"  "529"         
 [14,] "4D"   "0.0194" "0.0194" "0" "1136"  "1174" "1136"        
 [15,] "4E"   "0.0111" "0.0111" "0" "629"   "651"  "629"         
 [16,] "5"    "0.0242" "0.0242" "0" "537"   "562"  "537"         
 [17,] "5A"   "0.0277" "0.0277" "0" "1155"  "1211" "1155"        
 [18,] "5B"   "0.0226" "0.0226" "0" "1552"  "1644" "1552"        
 [19,] "5C"   "0.0166" "0.0166" "0" "602"   "619"  "602"         
 [20,] "5D"   "0.0315" "0.0315" "0" "984"   "1010" "984"         
 [21,] "5E"   "0.013"  "0.013"  "0" "460"   "483"  "460"         
 [22,] "6"    "0.0273" "0.0273" "0" "1247"  "1334" "1247"        
 [23,] "12"   "0.0323" "0.0323" "0" "526"   "556"  "526"         
 [24,] "12A"  "0.037"  "0.037"  "0" "1244"  "1306" "1244"        
 [25,] "12B"  "0.0222" "0.0222" "0" "361"   "383"  "361"         
 [26,] "12C"  "0.0303" "0.0303" "0" "1454"  "1516" "1454"        
 [27,] "12D"  "0.0403" "0.0403" "0" "1043"  "1097" "1043"        
 [28,] "13"   "0.0203" "0.0203" "0" "1134"  "1187" "1134"        
 [29,] "13A"  "0.0053" "0.0053" "0" "190"   "203"  "190"         
 [30,] "13B"  "0.0385" "0.0385" "0" "130"   "134"  "130"         
 [31,] "13C"  "0.0332" "0.0332" "0" "301"   "296"  "301"         
 [32,] "13D"  "0.0208" "0.0208" "0" "48"    "50"   "48"          
 [33,] "14"   "0.0099" "0.0099" "0" "911"   "950"  "911"         
 [34,] "16"   "0.0251" "0.0251" "0" "1395"  "1445" "1395"        
 [35,] "16A"  "0.0103" "0.0103" "0" "873"   "949"  "873"         
 [36,] "17"   "0.0321" "0.0321" "0" "467"   "485"  "467"         
 [37,] "17B"  "0.0357" "0.0357" "0" "168"   "183"  "168"         
 [38,] "18A"  "0.0259" "0.0259" "0" "1160"  "1188" "1160"        
 [39,] "18B"  "0.0268" "0.0268" "0" "1120"  "1159" "1120"        
 [40,] "18C"  "0.0171" "0.0171" "0" "1285"  "1357" "1285"        
 [41,] "18D"  "0.0176" "0.0176" "0" "1591"  "1654" "1591"        
 [42,] "18F"  "0.01"   "0.01"   "0" "299"   "316"  "299"         
 [43,] "18J"  "0.0145" "0.0145" "0" "1240"  "1334" "1240"        
 [44,] "19"   "0.0105" "0.0105" "0" "1530"  "1594" "1530"        
 [45,] "19A"  "0.0179" "0.0179" "0" "1231"  "1286" "1231"        
 [46,] "20"   "0.023"  "0.023"  "0" "478"   "497"  "478"         
 [47,] "21"   "0.0108" "0.0108" "0" "463"   "477"  "463"         
 [48,] "21A"  "0"      "0"      "0" "66"    "66"   "66"          
 [49,] "22"   "0.0078" "0.0078" "0" "770"   "776"  "770"         
 [50,] "23"   "0.0261" "0.0261" "0" "537"   "578"  "537"         
 [51,] "24"   "0.011"  "0.011"  "0" "1271"  "1325" "1271"        
 [52,] "25"   "0.0264" "0.0264" "0" "455"   "475"  "455"         
 [53,] "26B"  "0.04"   "0.04"   "0" "525"   "547"  "525"         
 [54,] "26C"  "0.0242" "0.0242" "0" "537"   "561"  "537"         
 [55,] "27"   "0.0167" "0.0167" "0" "899"   "949"  "899"         
 [56,] "29"   "0.0097" "0.0097" "0" "1235"  "1296" "1235"        
 [57,] "29A"  "0.0285" "0.0285" "0" "911"   "946"  "911"         
 [58,] "29B"  "0.0055" "0.0055" "0" "728"   "783"  "728"         
 [59,] "29C"  "0.0245" "0.0245" "0" "653"   "702"  "653"         
 [60,] "29D"  "0.0181" "0.0181" "0" "829"   "858"  "829"         
 [61,] "29F"  "0.0556" "0.0556" "0" "54"    "53"   "54"          
 [62,] "30"   "0.0194" "0.0194" "0" "826"   "844"  "826"         
 [63,] "30A"  "0.009"  "0.009"  "0" "893"   "922"  "893"         
 [64,] "30B"  "0.0171" "0.0171" "0" "1289"  "1334" "1289"        
 [65,] "31A"  "0.017"  "0.017"  "0" "1116"  "1163" "1116"        
 [66,] "31C"  "0.0269" "0.0269" "0" "558"   "598"  "558"         
 [67,] "31H"  "0"      "0"      "0" "1"     "2"    "1"           
 [68,] "32"   "0.0201" "0.0201" "0" "1196"  "1246" "1196"        
 [69,] "32A"  "0.0417" "0.0417" "0" "1054"  "1081" "1054"        
 [70,] "37"   "0.0134" "0.0134" "0" "522"   "573"  "522"         
 [71,] "38A"  "0"      "0"      "0" "2"     "2"    "2"           
 [72,] "40"   "0.0183" "0.0183" "0" "438"   "460"  "438"         
 [73,] "41"   "0.0279" "0.0279" "0" "1467"  "1526" "1467"        
 [74,] "41A"  "0.027"  "0.027"  "0" "703"   "739"  "703"         
 [75,] "41B"  "0.0324" "0.0324" "0" "1514"  "1583" "1514"        
 [76,] "41C"  "0.0231" "0.0231" "0" "867"   "907"  "867"         
 [77,] "41D"  "0.0405" "0.0405" "0" "1110"  "1162" "1110"        
 [78,] "42"   "0.0229" "0.0229" "0" "1177"  "1220" "1177"        
 [79,] "42A"  "0.0172" "0.0172" "0" "697"   "743"  "697"         
 [80,] "43"   "0"      "0"      "0" "73"    "75"   "73"          
 [81,] "44C"  "0.0128" "0.0128" "0" "78"    "67"   "78"          
 [82,] "46A"  "0.0338" "0.0338" "0" "296"   "312"  "296"         
 [83,] "47"   "0.0372" "0.0372" "0" "1021"  "1063" "1021"        
 [84,] "47A"  "0.0213" "0.0213" "0" "1364"  "1429" "1364"        
 [85,] "47B"  "0.0136" "0.0136" "0" "884"   "926"  "884"         
 [86,] "47C"  "0.011"  "0.011"  "0" "1278"  "1368" "1278"        
 [87,] "47D"  "0.0137" "0.0137" "0" "1024"  "1102" "1024"        
 [88,] "60"   "0.0068" "0.0068" "0" "585"   "619"  "585"         
 [89,] "61"   "0.0114" "0.0114" "0" "1141"  "1250" "1141"        
 [90,] "61A"  "0.0025" "0.0025" "0" "397"   "415"  "397"         
 [91,] "61B"  "0.0212" "0.0212" "0" "566"   "590"  "566"         
 [92,] "65A"  "0.0169" "0.0169" "0" "649"   "711"  "649"         
 [93,] "65B"  "0.0162" "0.0162" "0" "371"   "391"  "371"         
 [94,] "65C"  "0.1053" "0.1053" "0" "19"    "18"   "19"          
 [95,] "73B"  "0.0061" "0.0061" "0" "489"   "529"  "489"         
 [96,] "73D"  "0.0171" "0.0171" "0" "175"   "183"  "175"         
 [97,] "73F"  "0"      "0"      "0" "123"   "129"  "123"         
 [98,] "73H"  "0.017"  "0.017"  "0" "1530"  "1630" "1530"        
 [99,] "73I"  "0"      "0"      "0" "16"    "17"   "16"          
[100,] "74"   "0.0112" "0.0112" "0" "1254"  "1323" "1254"        
[101,] "74B"  "0.021"  "0.021"  "0" "808"   "869"  "808"         
[102,] "74E"  "0.0067" "0.0067" "0" "902"   "946"  "902"         
[103,] "74F"  "0.0183" "0.0183" "0" "602"   "642"  "602"         
[104,] "74G"  "0.0224" "0.0224" "0" "936"   "996"  "936"         
[105,] "78"   "0.0141" "0.0141" "0" "497"   "510"  "497"         
[106,] "79"   "0.0228" "0.0228" "0" "659"   "677"  "659"         
[107,] "91"   "0.02"   "0.02"   "0" "651"   "710"  "651"         
[108,] "93A"  "0.03"   "0.03"   "0" "733"   "780"  "733"         
[109,] "94"   "0.0271" "0.0271" "0" "1367"  "1388" "1367"        
[110,] "95"   "0.0277" "0.0277" "0" "686"   "695"  "686"         
[111,] "95A"  "0.0341" "0.0341" "0" "352"   "361"  "352"         
[112,] "97"   "0.0145" "0.0145" "0" "825"   "871"  "825"         
[113,] "104"  "0.041"  "0.041"  "0" "415"   "423"  "415"         
[114,] "104B" "0.0337" "0.0337" "0" "1393"  "1462" "1393"        
[115,] "104C" "0.0213" "0.0213" "0" "47"    "40"   "47"          
[116,] "108B" "0.0323" "0.0323" "0" "62"    "61"   "62"          
[117,] "113"  "0.029"  "0.029"  "0" "1034"  "1065" "1034"        
[118,] "114A" "0.0091" "0.0091" "0" "110"   "132"  "110"         
[119,] "114C" "0"      "0"      "0" "4"     "6"    "4"           
[120,] "114D" "0"      "0"      "0" "7"     "7"    "7"           
[121,] "115"  "0.0188" "0.0188" "0" "532"   "577"  "532"         
[122,] "117"  "0.0291" "0.0291" "0" "997"   "1046" "997"         
[123,] "117A" "0.0326" "0.0326" "0" "1198"  "1268" "1198"        
[124,] "128B" "0.0208" "0.0208" "0" "624"   "654"  "624"         
[125,] "128C" "0.0144" "0.0144" "0" "971"   "1035" "971"         
[126,] "135"  "0.0281" "0.0281" "0" "356"   "364"  "356"         
[127,] "135B" "0.0069" "0.0069" "0" "1014"  "1053" "1014"        
[128,] "135C" "0.0638" "0.0638" "0" "47"    "48"   "47"          
[129,] "137"  "0.0219" "0.0219" "0" "868"   "894"  "868"         
[130,] "143"  "0.0833" "0.0833" "0" "24"    "24"   "24"          
[131,] "144"  "0.0214" "0.0214" "0" "1075"  "1111" "1075"        
[132,] "144B" "0.036"  "0.036"  "0" "1139"  "1158" "1139"        
[133,] "144C" "0.029"  "0.029"  "0" "1518"  "1449" "1518"        
[134,] "144D" "0.0221" "0.0221" "0" "1587"  "1580" "1587"        
[135,] "144E" "0.0461" "0.0461" "0" "1194"  "1170" "1194"        
[136,] "144F" "0"      "0"      "0" "3"     "9"    "3"           
[137,] "148F" "0.0278" "0.0278" "0" "252"   "269"  "252"         
[138,] "159"  "0.0264" "0.0264" "0" "1249"  "1311" "1249"        
[139,] "159A" "0.0192" "0.0192" "0" "1251"  "1305" "1251"        
[140,] "159D" "0.0095" "0.0095" "0" "211"   "217"  "211"         
[141,] "159E" "0.0209" "0.0209" "0" "1242"  "1290" "1242"        
[142,] "159F" "0.0176" "0.0176" "0" "1080"  "1121" "1080"        
[143,] "159G" "0.0597" "0.0597" "0" "67"    "70"   "67"          
[144,] "159H" "0.2"    "0.2"    "0" "15"    "19"   "15"          
[145,] "159J" "0.0249" "0.0249" "0" "764"   "811"  "764"         
[146,] "159K" "0.0237" "0.0237" "0" "970"   "1025" "970"         
[147,] "159L" "0.0245" "0.0245" "0" "899"   "942"  "899"         
[148,] "159P" "0.0094" "0.0094" "0" "636"   "675"  "636"         
[149,] "159Q" "0.0171" "0.0171" "0" "817"   "850"  "817"         
       pbc.pres.total useme.us16
  [1,] "1057"         "1"       
  [2,] "965"          "1"       
  [3,] "1036"         "1"       
  [4,] "1027"         "1"       
  [5,] "1511"         "1"       
  [6,] "1420"         "1"       
  [7,] "534"          "1"       
  [8,] "581"          "1"       
  [9,] "1203"         "1"       
 [10,] "813"          "1"       
 [11,] "826"          "1"       
 [12,] "1115"         "1"       
 [13,] "567"          "1"       
 [14,] "1174"         "1"       
 [15,] "651"          "1"       
 [16,] "562"          "1"       
 [17,] "1211"         "1"       
 [18,] "1644"         "1"       
 [19,] "619"          "1"       
 [20,] "1010"         "1"       
 [21,] "483"          "1"       
 [22,] "1334"         "1"       
 [23,] "556"          "1"       
 [24,] "1306"         "1"       
 [25,] "383"          "1"       
 [26,] "1516"         "1"       
 [27,] "1097"         "1"       
 [28,] "1187"         "1"       
 [29,] "203"          "1"       
 [30,] "134"          "1"       
 [31,] "296"          "1"       
 [32,] "50"           "1"       
 [33,] "950"          "1"       
 [34,] "1445"         "1"       
 [35,] "949"          "1"       
 [36,] "485"          "1"       
 [37,] "183"          "1"       
 [38,] "1188"         "1"       
 [39,] "1159"         "1"       
 [40,] "1357"         "1"       
 [41,] "1654"         "1"       
 [42,] "316"          "1"       
 [43,] "1334"         "1"       
 [44,] "1594"         "1"       
 [45,] "1286"         "1"       
 [46,] "497"          "1"       
 [47,] "477"          "1"       
 [48,] "66"           "1"       
 [49,] "776"          "1"       
 [50,] "578"          "1"       
 [51,] "1325"         "1"       
 [52,] "475"          "1"       
 [53,] "547"          "1"       
 [54,] "561"          "1"       
 [55,] "949"          "1"       
 [56,] "1296"         "1"       
 [57,] "946"          "1"       
 [58,] "783"          "1"       
 [59,] "702"          "1"       
 [60,] "858"          "1"       
 [61,] "53"           "1"       
 [62,] "844"          "1"       
 [63,] "922"          "1"       
 [64,] "1334"         "1"       
 [65,] "1163"         "1"       
 [66,] "598"          "1"       
 [67,] "2"            "1"       
 [68,] "1246"         "1"       
 [69,] "1081"         "1"       
 [70,] "573"          "1"       
 [71,] "2"            "1"       
 [72,] "460"          "1"       
 [73,] "1526"         "1"       
 [74,] "739"          "1"       
 [75,] "1583"         "1"       
 [76,] "907"          "1"       
 [77,] "1162"         "1"       
 [78,] "1220"         "1"       
 [79,] "743"          "1"       
 [80,] "75"           "1"       
 [81,] "67"           "1"       
 [82,] "312"          "1"       
 [83,] "1063"         "1"       
 [84,] "1429"         "1"       
 [85,] "926"          "1"       
 [86,] "1368"         "1"       
 [87,] "1102"         "1"       
 [88,] "619"          "1"       
 [89,] "1250"         "1"       
 [90,] "415"          "1"       
 [91,] "590"          "1"       
 [92,] "711"          "1"       
 [93,] "391"          "1"       
 [94,] "18"           "1"       
 [95,] "529"          "1"       
 [96,] "183"          "1"       
 [97,] "129"          "1"       
 [98,] "1630"         "1"       
 [99,] "17"           "1"       
[100,] "1323"         "1"       
[101,] "869"          "1"       
[102,] "946"          "1"       
[103,] "642"          "1"       
[104,] "996"          "1"       
[105,] "510"          "1"       
[106,] "677"          "1"       
[107,] "710"          "1"       
[108,] "780"          "1"       
[109,] "1388"         "1"       
[110,] "695"          "1"       
[111,] "361"          "1"       
[112,] "871"          "1"       
[113,] "423"          "1"       
[114,] "1462"         "1"       
[115,] "40"           "1"       
[116,] "61"           "1"       
[117,] "1065"         "1"       
[118,] "132"          "1"       
[119,] "6"            "1"       
[120,] "7"            "1"       
[121,] "577"          "1"       
[122,] "1046"         "1"       
[123,] "1268"         "1"       
[124,] "654"          "1"       
[125,] "1035"         "1"       
[126,] "364"          "1"       
[127,] "1053"         "1"       
[128,] "48"           "1"       
[129,] "894"          "1"       
[130,] "24"           "1"       
[131,] "1111"         "1"       
[132,] "1158"         "1"       
[133,] "1449"         "1"       
[134,] "1580"         "1"       
[135,] "1170"         "1"       
[136,] "9"            "1"       
[137,] "269"          "1"       
[138,] "1311"         "1"       
[139,] "1305"         "1"       
[140,] "217"          "1"       
[141,] "1290"         "1"       
[142,] "1121"         "1"       
[143,] "70"           "1"       
[144,] "19"           "1"       
[145,] "811"          "1"       
[146,] "1025"         "1"       
[147,] "942"          "1"       
[148,] "675"          "1"       
[149,] "850"          "1"       

> pbc <- as.data.frame(list(precinct = pbc.pres$precinct, 
    pbuch = pbuch, ptotal = ptotal, pdeckard = pdeckard, pnelson = pnelson, 
    stotal = stotal, plowe = plowe, sstotal = sstotal, pmcguire = pmcguire, 
    shtotal = shtotal, useme.ss35 = useme.ss35, useme.us16 = useme.us16))

> pbc.complete <- cbind(pbc.pres, pbc.senate[, -1], 
    pbc.ss35[, -1], pbc.us16[, -1], useme.ss35, useme.us16, pbc.pres.total)

> fit1 <- glm(buchananm ~ nelson + deckard, data = pbc.complete[useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit1))

Call:
glm(formula = buchananm ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.ss35 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.1424  -1.3943  -0.3857   0.6849   5.7703  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9526     0.2647 -26.263   <2e-16 ***
nelson        3.3220     0.3496   9.503   <2e-16 ***
deckard       6.1608    17.4382   0.353    0.724    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 374.96  on 104  degrees of freedom
Residual deviance: 280.08  on 102  degrees of freedom
AIC: 560.19

Number of Fisher Scoring iterations: 4


> print(summary(glm(pbuch ~ pnelson + pdeckard, data = pbc[pbc$useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = ptotal)))

Call:
glm(formula = pbuch ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.ss35 == 1, ], weights = ptotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.1424  -1.3943  -0.3857   0.6849   5.7703  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9526     0.2647 -26.263   <2e-16 ***
pnelson       3.3220     0.3496   9.503   <2e-16 ***
pdeckard      6.1608    17.4382   0.353    0.724    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 374.96  on 104  degrees of freedom
Residual deviance: 280.08  on 102  degrees of freedom
AIC: 560.19

Number of Fisher Scoring iterations: 4


> fit2 <- glm(lowe ~ nelson + deckard, data = pbc.complete[useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)
Warning in eval(expr, envir, enclos) : non-integer #successes in a binomial glm!

> print(summary(fit2))

Call:
glm(formula = lowe ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.ss35 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-5.2577  -0.9685  -0.1429   1.0635   4.8310  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -2.1204     0.1098 -19.307  < 2e-16 ***
nelson       -1.6471     0.1699  -9.695  < 2e-16 ***
deckard      19.4051     5.0074   3.875 0.000107 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 419.41  on 104  degrees of freedom
Residual deviance: 294.38  on 102  degrees of freedom
AIC: 767.47

Number of Fisher Scoring iterations: 3


> print(summary(glm(plowe ~ pnelson + pdeckard, data = pbc[pbc$useme.ss35 == 
    1, ], family = binomial(link = "logit"), weights = sstotal)))

Call:
glm(formula = plowe ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.ss35 == 1, ], weights = sstotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-5.1029  -0.9595  -0.1413   1.0574   4.8281  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -2.1067     0.1106 -19.047  < 2e-16 ***
pnelson      -1.6704     0.1705  -9.796  < 2e-16 ***
pdeckard     19.2966     5.0217   3.843 0.000122 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 417.95  on 104  degrees of freedom
Residual deviance: 290.75  on 102  degrees of freedom
AIC: 763.28

Number of Fisher Scoring iterations: 3


> fit3 <- glm(buchananm ~ nelson + deckard, data = pbc.complete[useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)

> print(summary(fit3))

Call:
glm(formula = buchananm ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.us16 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7669  -1.0725  -0.3245   0.6811   5.6474  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9398     0.1843 -37.653   <2e-16 ***
nelson        3.3678     0.2692  12.511   <2e-16 ***
deckard       4.7514    12.0497   0.394    0.693    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 455.55  on 148  degrees of freedom
Residual deviance: 306.85  on 146  degrees of freedom
AIC: 757.2

Number of Fisher Scoring iterations: 4


> print(summary(glm(pbuch ~ pnelson + pdeckard, data = pbc[pbc$useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = ptotal)))

Call:
glm(formula = pbuch ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.us16 == 1, ], weights = ptotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7669  -1.0725  -0.3245   0.6811   5.6474  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -6.9398     0.1843 -37.653   <2e-16 ***
pnelson       3.3678     0.2692  12.511   <2e-16 ***
pdeckard      4.7514    12.0497   0.394    0.693    
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 455.55  on 148  degrees of freedom
Residual deviance: 306.85  on 146  degrees of freedom
AIC: 757.2

Number of Fisher Scoring iterations: 4


> fit4 <- glm(mcguire ~ nelson + deckard, data = pbc.complete[useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = pbc.pres.total)
Warning in eval(expr, envir, enclos) : non-integer #successes in a binomial glm!

> print(summary(fit4))

Call:
glm(formula = mcguire ~ nelson + deckard, family = binomial(link = "logit"), 
    data = pbc.complete[useme.us16 == 1, ], weights = pbc.pres.total)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7324  -1.3050  -0.3016   0.8905   5.0718  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -3.3420     0.1109 -30.132  < 2e-16 ***
nelson       -0.9988     0.1891  -5.283 1.27e-07 ***
deckard      26.1383     3.4097   7.666 1.78e-14 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 491.68  on 148  degrees of freedom
Residual deviance: 414.91  on 146  degrees of freedom
AIC: 1042.2

Number of Fisher Scoring iterations: 3


> print(summary(glm(pmcguire ~ pnelson + pdeckard, data = pbc[pbc$useme.us16 == 
    1, ], family = binomial(link = "logit"), weights = shtotal)))

Call:
glm(formula = pmcguire ~ pnelson + pdeckard, family = binomial(link = "logit"), 
    data = pbc[pbc$useme.us16 == 1, ], weights = shtotal)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.6563  -1.2957  -0.2921   0.8685   5.1082  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -3.3418     0.1136 -29.412  < 2e-16 ***
pnelson      -0.9900     0.1937  -5.112 3.18e-07 ***
pdeckard     25.5344     3.4069   7.495 6.63e-14 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 469.50  on 148  degrees of freedom
Residual deviance: 396.87  on 146  degrees of freedom
AIC: 1014.9

Number of Fisher Scoring iterations: 3

sh: invalid character 32 in exportstr for export set R_VSIZE
sh: invalid character 32 in exportstr for export set R_NSIZE
> vote <- pbc
> 
> indx <- as.logical(vote$useme.us16)
> str.dep         <- "pmcguire"
> outname         <- "us16.mcguire"
> initial.parms   <- c(-5.721152e+00,1.719076e+00,2.244414e+01)
> initial.domains <- NULL
> 
> #run specific variables
> pop.size         <- 100;
> wait.generations <- 1;
> gradient.check   <- F;
> max.generations  <- wait.generations*10;
> 
> str.pop   <- "ptotal"
> str.indep <- c("pnelson","pdeckard")
> statename <- "PBC"
> 
> ## where we are going to store things...
> ps.flag <- T
> ps.dir  <- paste("postscript.lqd8.",str.dep,sep="");
> project <- paste("genoud.pro.lqd8.",str.dep,".ps",pop.size,".wg",wait.generations,".",sep="");
> project <- paste(project,system("date | sed 's/ //g'",T),sep="");
> ## ... and create the postscript directory if it does not exist.
> if ( ! file.exists(ps.dir) )
+   dir.create(ps.dir)
> 
> ## loop over regions/states/samples
> tmp.str.indep <- str.indep
> tmp.out <- 
+   lqd(mydata=vote[indx,],
+       nparms = 3,
+       str.pop,
+       str.dep,
+       tmp.str.indep,
+       sample.name     = statename ,
+       pop.size        = pop.size,
+       wait.generations= wait.generations,
+       max.generations = max.generations,
+       gradient.check  = gradient.check,
+       project   = project,
+       outlier.threshold = 2.5,
+       flag.print= T,
+       ps.dir    = ps.dir ,
+       ps.flag   = T,
+       pstart   = initial.parms,
+       mdomains = initial.domains 
+       )
[1] "mydata$pnelson"
[1] "mydata$pdeckard"
Warning in eval(expr, envir, enclos) : non-integer #successes in a binomial glm!

Call:
glm(formula = data.dep ~ -1 + data.indep, family = binomial(link = "logit"), 
    weights = data.pop)

Deviance Residuals: 
    Min       1Q   Median       3Q      Max  
-3.7324  -1.3050  -0.3016   0.8905   5.0718  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
data.indep1  -3.3420     0.1109 -30.132  < 2e-16 ***
data.indep2  -0.9988     0.1891  -5.283 1.27e-07 ***
data.indep3  26.1383     3.4097   7.666 1.78e-14 ***
---
Signif. codes:  0  `***'  0.001  `**'  0.01  `*'  0.05  `.'  0.1  ` '  1 

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 140788.62  on 149  degrees of freedom
Residual deviance:    414.91  on 146  degrees of freedom
AIC: 1042.2

Number of Fisher Scoring iterations: 3



Mon Feb 12 10:28:21 2001
Domains:
 -2.613832e+02   <=  X1   <=    2.613832e+02 
 -2.613832e+02   <=  X2   <=    2.613832e+02 
 -2.613832e+02   <=  X3   <=    2.613832e+02 

Data Type: Floating Point
Operators (code number, name, population) 
	(0) Cloning........................... 	15
	(1) Uniform Mutation.................. 	12
	(2) Boundary Mutation................. 	12
	(3) Non-Uniform Mutation.............. 	12
	(4) Polytope Crossover................ 	12
	(5) Multiple Point Simple Crossover... 	12
	(6) Whole Non-Uniform Mutation........ 	12
	(7) Heuristic Crossover............... 	12
	(8) Local-Minimum Crossover........... 	0

SOFT Maximum Number of Generations: 10
Maximum Nonchanging Generations: 1
Population size       : 100
Convergence Tolerance: 1.000000e-03

Using the BFGS Derivative Based Optimizer on the Best Individual Each Generation.
Not Checking Gradients before Stoping
Not Using Out of Bounds Individuals and Not Allowing Trespassing.



Minimization Problem.

Parameter B (hardcoded): 6
Parameter Q (hardcoded): 0.500000


STARTING VALUES


The 2 best initial individuals are
-5.72	 1.72	22.44	
fitness = 1.476076e+00

-19.00	29.12	229.53	
fitness = 9.005054e+00


The worst fit of the population is: nan




Generation#	    Solution Value

      0 	1.476076e+00
GENERATION: 0 (initializing the population)
Fitness Value... 1.476076e+00
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 3
#unique......... 100, #Total UniqueCount: 100
tobs............ 97
var 1:
best............ -5.721152e+00
mean............ 2.421760e+01
var............. 2.462391e+04
skewness........ -1.380553e-01
kurtosis........ 1.723743e+00
#null........... 0
tobs............ 100
var 2:
best............ 1.719076e+00
mean............ 3.724409e+00
var............. 2.207390e+04
skewness........ -1.952159e-02
kurtosis........ 1.973057e+00
#null........... 0
tobs............ 100
var 3:
best............ 2.244414e+01
mean............ -4.445591e-01
var............. 2.046204e+04
skewness........ -1.959410e-02
kurtosis........ 1.904499e+00
#null........... 0
tobs............ 100
      1 	8.564189e-01

GENERATION: 1
Fitness Value... 8.564189e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 1
#unique......... 58, #Total UniqueCount: 158
tobs............ 99
var 1:
best............ -4.705692e+00
mean............ -2.171128e+01
var............. 3.873201e+03
skewness........ 2.134644e-01
kurtosis........ 6.344378e+00
#null........... 0
tobs............ 100
var 2:
best............ 1.131479e+00
mean............ 3.458271e+01
var............. 9.406004e+03
skewness........ -1.202530e-01
kurtosis........ 3.528369e+00
#null........... 0
tobs............ 100
var 3:
best............ 1.243564e+02
mean............ 4.757951e+01
var............. 1.137886e+04
skewness........ 9.575421e-02
kurtosis........ 2.725097e+00
#null........... 0
tobs............ 100
      2 	8.336152e-01

GENERATION: 2
Fitness Value... 8.336152e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 1
#unique......... 61, #Total UniqueCount: 219
tobs............ 99
var 1:
best............ -4.311246e+00
mean............ -4.296428e+00
var............. 4.549166e+02
skewness........ 2.649325e+00
kurtosis........ 2.266954e+01
#null........... 0
tobs............ 100
var 2:
best............ 8.425320e-01
mean............ -1.144037e+00
var............. 2.175151e+03
skewness........ -9.448937e-01
kurtosis........ 1.207040e+01
#null........... 0
tobs............ 100
var 3:
best............ 1.223482e+02
mean............ 7.467174e+01
var............. 5.111351e+03
skewness........ -9.036627e-01
kurtosis........ 6.191446e+00
#null........... 0
tobs............ 100
      3 	7.452754e-01

GENERATION: 3
Fitness Value... 7.452754e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 0
#unique......... 64, #Total UniqueCount: 283
tobs............ 100
var 1:
best............ -4.230132e+00
mean............ 1.996867e+00
var............. 2.886178e+03
skewness........ 2.180855e+00
kurtosis........ 1.385344e+01
#null........... 0
tobs............ 100
var 2:
best............ 7.287285e-01
mean............ 1.763570e+00
var............. 1.540355e+03
skewness........ 2.205605e-01
kurtosis........ 1.832167e+01
#null........... 0
tobs............ 100
var 3:
best............ 8.420945e+01
mean............ 1.172367e+02
var............. 2.056320e+03
skewness........ -5.015649e+00
kurtosis........ 3.386378e+01
#null........... 0
tobs............ 100
      4 	7.392227e-01

GENERATION: 4
Fitness Value... 7.392227e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 0
#unique......... 62, #Total UniqueCount: 345
tobs............ 100
var 1:
best............ -4.186602e+00
mean............ -5.307979e+00
var............. 1.081477e+03
skewness........ 7.296809e-01
kurtosis........ 2.885775e+01
#null........... 0
tobs............ 100
var 2:
best............ 6.667886e-01
mean............ 4.076789e+00
var............. 1.509167e+03
skewness........ 2.611136e+00
kurtosis........ 2.018452e+01
#null........... 0
tobs............ 100
var 3:
best............ 7.679533e+01
mean............ 7.853298e+01
var............. 3.564021e+03
skewness........ -3.177324e+00
kurtosis........ 1.413463e+01
#null........... 0
tobs............ 100
      5 	7.376954e-01

GENERATION: 5
Fitness Value... 7.376954e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 0
#unique......... 66, #Total UniqueCount: 411
tobs............ 100
var 1:
best............ -4.185866e+00
mean............ -1.630150e+00
var............. 8.557714e+02
skewness........ 5.909243e+00
kurtosis........ 4.700390e+01
#null........... 0
tobs............ 100
var 2:
best............ 6.650476e-01
mean............ 7.108939e+00
var............. 3.054704e+03
skewness........ 2.018672e+00
kurtosis........ 1.242137e+01
#null........... 0
tobs............ 100
var 3:
best............ 7.661073e+01
mean............ 7.548869e+01
var............. 2.290488e+03
skewness........ -1.493183e+00
kurtosis........ 1.455905e+01
#null........... 0
tobs............ 100
      6 	7.374570e-01

GENERATION: 6
Fitness Value... 7.374570e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 0
#unique......... 66, #Total UniqueCount: 477
tobs............ 100
var 1:
best............ -4.185866e+00
mean............ -8.083615e+00
var............. 3.425444e+03
skewness........ -8.440619e-01
kurtosis........ 9.740380e+00
#null........... 0
tobs............ 100
var 2:
best............ 5.640029e-01
mean............ -7.116996e+00
var............. 2.665144e+03
skewness........ -2.205490e+00
kurtosis........ 1.244832e+01
#null........... 0
tobs............ 100
var 3:
best............ 7.661073e+01
mean............ 7.275331e+01
var............. 7.188579e+02
skewness........ -2.706730e+00
kurtosis........ 2.011696e+01
#null........... 0
tobs............ 100
      7 	6.835379e-01

GENERATION: 7
Fitness Value... 6.835379e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 1
#unique......... 63, #Total UniqueCount: 540
tobs............ 99
var 1:
best............ -3.606021e+00
mean............ 4.813018e-01
var............. 1.903146e+03
skewness........ 6.833763e-01
kurtosis........ 1.337085e+01
#null........... 0
tobs............ 100
var 2:
best............ -1.525234e-01
mean............ 3.685410e-01
var............. 5.356480e+02
skewness........ 9.272716e-02
kurtosis........ 1.916457e+01
#null........... 0
tobs............ 100
var 3:
best............ 5.889752e+01
mean............ 7.322571e+01
var............. 1.296885e+03
skewness........ -2.672923e+00
kurtosis........ 2.079573e+01
#null........... 0
tobs............ 100

GENERATION: 8
Fitness Value... 6.835379e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 1
#unique......... 60, #Total UniqueCount: 600
tobs............ 99
var 1:
best............ -3.606021e+00
mean............ -5.752702e+00
var............. 1.256072e+03
skewness........ -3.387741e+00
kurtosis........ 3.525373e+01
#null........... 0
tobs............ 100
var 2:
best............ -1.525234e-01
mean............ -4.142247e+00
var............. 1.255328e+03
skewness........ -2.953118e+00
kurtosis........ 1.969992e+01
#null........... 0
tobs............ 100
var 3:
best............ 5.889752e+01
mean............ 6.628828e+01
var............. 2.663677e+03
skewness........ -1.996369e+00
kurtosis........ 2.072882e+01
#null........... 0
tobs............ 100
      9 	6.832567e-01

GENERATION: 9
Fitness Value... 6.832567e-01
mean............ nan
var............. nan
skewness........ nan
kurtosis........ nan
#null........... 0
#unique......... 36, #Total UniqueCount: 636
tobs............ 100
var 1:
best............ -3.608313e+00
mean............ -5.989181e+00
var............. 1.956164e+03
skewness........ -1.255319e+00
kurtosis........ 2.366061e+01
#null........... 0
tobs............ 100
var 2:
best............ -1.510945e-01
mean............ 5.787823e+00
var............. 2.364762e+03
skewness........ 5.102396e-01
kurtosis........ 1.293170e+01
#null........... 0
tobs............ 100
var 3:
best............ 5.889759e+01
mean............ 5.316453e+01
var............. 1.972921e+03
skewness........ -2.474643e+00
kurtosis........ 2.218448e+01
#null........... 0
tobs............ 100

Soft Generation Wait Limit Hit.
No Improvement in 1 Generations

Best Fit Found at Generation 9
Fit Value = 6.832567e-01


Parameters at the Solution (value, gradient):

 X[ 1] :	-3.608313e+00	G[ 1] :	1.160058e+00
 X[ 2] :	-1.510945e-01	G[ 2] :	6.671132e-01
 X[ 3] :	5.889759e+01	G[ 3] :	1.013864e-02

Solution Found Generation 9
Number of Generations Run 9


Mon Feb 12 10:31:07 2001
Total run time : 0 hours 2 minutes and 46 seconds
[1] "Saving GLM and RGENOUD Results"
expression(glm.PBC <<- glm1)
expression(gen.PBC.100 <<- gen3)
[1] "residuals$raw.res"
  [1]  -1.741718832  -2.323581223  -3.160972487  -1.685020488  -3.314380017
  [6]  -0.173722467  -2.610619279  -2.388489018  -3.125466044  -1.068536569
 [11]   0.459799116  -3.267719213  -3.196572782  -1.588059023  -2.208691255
 [16]  -0.002744705  -1.528218765  -1.369996850  -1.905732736   0.792589059
 [21]  -1.660588347  -0.441628608  -0.630107606  -0.265494892  -0.779289560
 [26]  -1.741849289   2.242314287  -1.562045140  -2.591657178   0.126956643
 [31]   1.029929718  -0.168132414  -3.190409102  -1.099898147  -3.359534491
 [36]   0.143345887   0.161884726  -0.622786089  -0.208263770  -2.478088475
 [41]  -3.290231478  -1.625915702  -2.645962651  -5.098841182  -1.931481823
 [46]  -0.433265352  -2.108923795  -1.246724519  -3.049250738  -0.674165305
 [51]  -3.126612435  -1.024264230   1.884469882  -2.025057523  -1.923911649
 [56]  -3.623000473  -1.070010548  -3.479686969  -0.350286355  -2.830339049
 [61]   1.544602445  -1.404724556  -3.137417947  -2.282116324  -1.876971349
 [66]  -1.576772616  -0.232798255  -1.473700552   1.860524743  -2.924621630
 [71]  -0.224168636  -0.707616473  -2.565331965  -0.263001873   0.176431785
 [76]  -1.462471392   1.476204349  -0.842372124  -2.209284935  -1.354307033
 [81]  -0.613154780   0.470907459   1.001993974  -1.275739345  -3.110474407
 [86]  -3.250287656  -2.705002371  -3.175367495  -3.525188424  -2.895686018
 [91]  -1.874583903  -1.850781214  -1.005249547 -19.273426212  -3.025802708
 [96]  -1.201482073  -1.810231171  -2.678590425  -0.639986031  -3.539980273
[101]  -2.423733270  -4.123164712  -1.941702028  -2.623312570  -2.160774685
[106]  -1.835974920  -1.617207174  -1.234553179  -0.749092151  -0.485113050
[111]  -0.395553161  -2.223159324   0.012708389  -0.466467499  -1.341800796
[116]   0.415151993  -0.207603783  -1.099012857  -0.397171795  -0.424695013
[121]  -2.208254661  -0.166860254   0.797361968  -0.584365952  -2.006899951
[126]  -1.144796587  -4.264819910  -6.385045718  -1.247337256  -1.673081328
[131]  -1.843682758   1.633670235  -0.199205304  -1.620458880   2.755452865
[136]  -0.461765797  -0.777923729  -0.851698410  -1.896779626  -1.429221570
[141]  -0.849130978  -2.676298898   1.850555735   4.896421082  -0.892289424
[146]  -0.948691092  -0.593478532  -2.790348867  -3.039786290
median: -1.462471 
[1] "residuals$res"
  [1]  -0.27924744  -0.86110983  -1.69850109  -0.22254910  -1.85190862
  [6]   1.28874893  -1.14814789  -0.92601763  -1.66299465   0.39393482
 [11]   1.92227051  -1.80524782  -1.73410139  -0.12558763  -0.74621986
 [16]   1.45972669  -0.06574737   0.09247454  -0.44326134   2.25506045
 [21]  -0.19811695   1.02084278   0.83236379   1.19697650   0.68318183
 [26]  -0.27937790   3.70478568  -0.09957375  -1.12918579   1.58942804
 [31]   2.49240111   1.29433898  -1.72793771   0.36257325  -1.89706310
 [36]   1.60581728   1.62435612   0.83968530   1.25420762  -1.01561708
 [41]  -1.82776009  -0.16344431  -1.18349126  -3.63636979  -0.46901043
 [46]   1.02920604  -0.64645240   0.21574687  -1.58677935   0.78830609
 [51]  -1.66414104   0.43820716   3.34694127  -0.56258613  -0.46144026
 [56]  -2.16052908   0.39246084  -2.01721558   1.11218504  -1.36786766
 [61]   3.00707384   0.05774684  -1.67494656  -0.81964493  -0.41449996
 [66]  -0.11430122   1.22967314  -0.01122916   3.32299613  -1.46215024
 [71]   1.23830276   0.75485492  -1.10286057   1.19946952   1.63890318
 [76]   0.00000000   2.93867574   0.62009927  -0.74681354   0.10816436
 [81]   0.84931661   1.93337885   2.46446537   0.18673205  -1.64800301
 [86]  -1.78781626  -1.24253098  -1.71289610  -2.06271703  -1.43321463
 [91]  -0.41211251  -0.38830982   0.45722185 -17.81095482  -1.56333132
 [96]   0.26098932  -0.34775978  -1.21611903   0.82248536  -2.07750888
[101]  -0.96126188  -2.66069332  -0.47923064  -1.16084118  -0.69830329
[106]  -0.37350353  -0.15473578   0.22791821   0.71337924   0.97735834
[111]   1.06691823  -0.76068793   1.47517978   0.99600389   0.12067060
[116]   1.87762339   1.25486761   0.36345853   1.06529960   1.03777638
[121]  -0.74578327   1.29561114   2.25983336   0.87810544  -0.54442856
[126]   0.31767481  -2.80234852  -4.92257433   0.21513414  -0.21060994
[131]  -0.38121137   3.09614163   1.26326609  -0.15798749   4.21792426
[136]   1.00070560   0.68454766   0.61077298  -0.43430823   0.03324982
[141]   0.61334041  -1.21382751   3.31302713   6.35889247   0.57018197
[146]   0.51378030   0.86899286  -1.32787747  -1.57731490
[1] "s0: 1.51624538468818"
sigma:  1.403145 
[1] "data: student, pred, dep"
                                   data.dep
  [1,]  -0.199015447 0.03020085 0.021032505
  [2,]  -0.613700014 0.02671805 0.014656144
  [3,]  -1.210496162 0.03236419 0.014985015
  [4,]  -0.158607390 0.03106598 0.021943574
  [5,]  -1.319827399 0.02880391 0.014542936
  [6,]   0.918471959 0.02981161 0.029027576
  [7,]  -0.818267715 0.05207500 0.026974952
  [8,]  -0.659958822 0.02679218 0.010791367
  [9,]  -1.185191255 0.03000250 0.014629948
 [10,]   0.280751418 0.03226279 0.025641026
 [11,]   1.369973255 0.02458442 0.027061856
 [12,]  -1.286572947 0.02884228 0.012464046
 [13,]  -1.235867957 0.02455813 0.003780718
 [14,]  -0.089504414 0.02685942 0.019366197
 [15,]  -0.531819663 0.02451553 0.011128776
 [16,]   1.040325237 0.02422637 0.024208566
 [17,]  -0.046857163 0.03587262 0.027705628
 [18,]   0.065905214 0.02813916 0.022551546
 [19,]  -0.315905687 0.02959135 0.016611296
 [20,]   1.607147638 0.02743059 0.031504065
 [21,]  -0.141194971 0.02479234 0.013043478
 [22,]   0.727539285 0.02930478 0.027265437
 [23,]   0.593213141 0.03738900 0.032319392
 [24,]   0.853067134 0.03838901 0.036977492
 [25,]   0.486893408 0.02882286 0.022160665
 [26,]  -0.199108421 0.03891279 0.030261348
 [27,]   2.640344985 0.02892257 0.040268456
 [28,]  -0.070964711 0.02772621 0.020282187
 [29,]  -0.804753712 0.04157162 0.005263158
 [30,]   1.132761435 0.03640733 0.038461538
 [31,]   1.776296753 0.02405105 0.033222591
 [32,]   0.922455906 0.02450996 0.020833333
 [33,]  -1.231475194 0.02650688 0.009879254
 [34,]   0.258400494 0.03002770 0.025089606
 [35,]  -1.352008314 0.02843580 0.010309278
 [36,]   1.144441803 0.03099193 0.032119914
 [37,]   1.157654154 0.03355916 0.035714286
 [38,]   0.598431076 0.02888848 0.025862069
 [39,]   0.893854893 0.02779127 0.026785714
 [40,]  -0.723815007 0.02827038 0.017120623
 [41,]  -1.302617099 0.03179315 0.017598994
 [42,]  -0.116484299 0.02404479 0.010033445
 [43,]  -0.843456405 0.02605687 0.014516129
 [44,]  -2.591586010 0.03340660 0.010457516
 [45,]  -0.334256674 0.02652680 0.017871649
 [46,]   0.733499652 0.02611174 0.023012552
 [47,]  -0.460716896 0.02623193 0.010799136
 [48,]   0.153759549 0.02300848 0.000000000
 [49,]  -1.130873754 0.02482278 0.007792208
 [50,]   0.561813882 0.03092518 0.026070764
 [51,]  -1.186008270 0.02421955 0.011014949
 [52,]   0.312303648 0.03501206 0.026373626
 [53,]   2.385314664 0.02695165 0.040000000
 [54,]  -0.400946667 0.04120188 0.024208566
 [55,]  -0.328861525 0.02676480 0.016685206
 [56,]  -1.539776553 0.02561631 0.009716599
 [57,]   0.279700936 0.03492717 0.028540066
 [58,]  -1.437639176 0.02485387 0.005494505
 [59,]   0.792637534 0.02663086 0.024502297
 [60,]  -0.974858688 0.03612453 0.018094089
 [61,]   2.143096257 0.02344924 0.055555556
 [62,]   0.041155301 0.02724162 0.019370460
 [63,]  -1.193709196 0.02513152 0.008958567
 [64,]  -0.584148604 0.02723824 0.017067494
 [65,]  -0.295407879 0.02574112 0.017025090
 [66,]  -0.081460762 0.03943042 0.026881720
 [67,]   0.876369534 0.02638261 0.000000000
 [68,]  -0.008002853 0.02681066 0.020066890
 [69,]   2.368249323 0.03181427 0.041745731
 [70,]  -1.042052465 0.03624485 0.013409962
 [71,]   0.882519734 0.02450996 0.000000000
 [72,]   0.537973738 0.02323519 0.018264840
 [73,]  -0.785992129 0.04096449 0.027948194
 [74,]   0.854843871 0.02864071 0.027027027
 [75,]   1.168021624 0.03158900 0.032364597
 [76,]   0.000000000 0.03155733 0.023068051
 [77,]   2.094349964 0.03282449 0.040540541
 [78,]   0.441935414 0.02683717 0.022939677
 [79,]  -0.532242770 0.03133811 0.017216643
 [80,]   0.077087111 0.02387152 0.000000000
 [81,]   0.605295164 0.02437140 0.012820513
 [82,]   1.377890004 0.02928855 0.033783784
 [83,]   1.756387369 0.03182390 0.037218413
 [84,]   0.133081119 0.02670147 0.021260997
 [85,]  -1.174506940 0.03140115 0.013574661
 [86,]  -1.274149739 0.02455496 0.010954617
 [87,]  -0.885533124 0.02684145 0.013671875
 [88,]  -1.220755268 0.02783110 0.006837607
 [89,]  -1.470067378 0.02777947 0.011393514
 [90,]  -1.021430489 0.02448872 0.002518892
 [91,]  -0.293706383 0.03547760 0.021201413
 [92,]  -0.276742565 0.02849835 0.016949153
 [93,]   0.325855127 0.02394436 0.016172507
 [94,] -12.693599388 0.96298091 0.105263158
 [95,]  -1.114162695 0.02774019 0.006134969
 [96,]   0.186003159 0.03301127 0.017142857
 [97,]  -0.247843159 0.02477330 0.000000000
 [98,]  -0.866709728 0.02792431 0.016993464
 [99,]   0.586172936 0.02352625 0.000000000
[100,]  -1.480609306 0.02691464 0.011164274
[101,]  -0.685076870 0.03644764 0.021039604
[102,]  -1.896236077 0.02923582 0.006651885
[103,]  -0.341540460 0.03169814 0.018272425
[104,]  -0.827314033 0.03841097 0.022435897
[105,]  -0.497670245 0.03055092 0.014084507
[106,]  -0.266190342 0.03588692 0.022761760
[107,]  -0.110277862 0.03038720 0.019969278
[108,]   0.162433880 0.03852070 0.030013643
[109,]   0.508414647 0.03052548 0.027066569
[110,]   0.696548579 0.03088010 0.027696793
[111,]   0.760376563 0.03807512 0.034090909
[112,]  -0.542130838 0.02668570 0.014545455
[113,]   1.051338424 0.04084156 0.040963855
[114,]   0.709836982 0.03601321 0.033740129
[115,]   0.086000117 0.07825681 0.021276596
[116,]   1.338153922 0.02410538 0.032258065
[117,]   0.894325256 0.03010049 0.029013540
[118,]   0.259031427 0.02361650 0.009090909
[119,]   0.759222987 0.02561740 0.000000000
[120,]   0.739607603 0.02511931 0.000000000
[121,]  -0.531508509 0.03589985 0.018796992
[122,]   0.923362555 0.02996689 0.029087262
[123,]   1.610549218 0.02880875 0.032554257
[124,]   0.625812529 0.02435577 0.020833333
[125,]  -0.388006038 0.02395725 0.014418126
[126,]   0.226402052 0.03982322 0.028089888
[127,]  -1.997191604 0.02893302 0.006903353
[128,]  -3.508244621 0.52409539 0.063829787
[129,]   0.153322860 0.02887518 0.021889401
[130,]  -0.150098531 0.22621745 0.083333333
[131,]  -0.271683602 0.03097896 0.021395349
[132,]   2.206573531 0.02806730 0.035996488
[133,]   0.900310725 0.02987644 0.028985507
[134,]  -0.112595304 0.02888160 0.022054190
[135,]   3.006051125 0.03190590 0.046063652
[136,]   0.713187814 0.02314364 0.000000000
[137,]   0.487866815 0.03669539 0.027777778
[138,]   0.435288710 0.03046371 0.026421137
[139,]  -0.309524940 0.02781962 0.019184652
[140,]   0.023696648 0.02446837 0.009478673
[141,]   0.437118480 0.02459585 0.020933977
[142,]  -0.865076591 0.03156904 0.017592593
[143,]   2.361144562 0.02510118 0.059701493
[144,]   4.531886944 0.02491457 0.200000000
[145,]   0.406360106 0.03023421 0.024869110
[146,]   0.366163486 0.02865502 0.023711340
[147,]   0.619318130 0.02764175 0.024471635
[148,]  -0.946358287 0.02676934 0.009433962
[149,]  -1.124128584 0.03675380 0.017135863
> 
> hist(tmp.out$student)
> eval(parse(text=paste(outname,".",pop.size,".",wait.generations,"<- tmp.out",sep="")))
> proc.time()
[1] 152.48   4.92 170.15   0.01   0.00
> 
